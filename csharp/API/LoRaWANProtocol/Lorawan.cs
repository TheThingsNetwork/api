// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: github.com/TheThingsNetwork/api/protocol/lorawan/lorawan.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace TheThingsNetwork.API.LoRaWANProtocol {

  /// <summary>Holder for reflection information generated from github.com/TheThingsNetwork/api/protocol/lorawan/lorawan.proto</summary>
  public static partial class LorawanReflection {

    #region Descriptor
    /// <summary>File descriptor for github.com/TheThingsNetwork/api/protocol/lorawan/lorawan.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static LorawanReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cj5naXRodWIuY29tL1RoZVRoaW5nc05ldHdvcmsvYXBpL3Byb3RvY29sL2xv",
            "cmF3YW4vbG9yYXdhbi5wcm90bxIHbG9yYXdhbhotZ2l0aHViLmNvbS9nb2dv",
            "L3Byb3RvYnVmL2dvZ29wcm90by9nb2dvLnByb3RvIqwBCghNZXRhZGF0YRIn",
            "Cgptb2R1bGF0aW9uGAsgASgOMhMubG9yYXdhbi5Nb2R1bGF0aW9uEhEKCWRh",
            "dGFfcmF0ZRgMIAEoCRIQCghiaXRfcmF0ZRgNIAEoDRITCgtjb2RpbmdfcmF0",
            "ZRgOIAEoCRINCgVmX2NudBgPIAEoDRIuCg5mcmVxdWVuY3lfcGxhbhgQIAEo",
            "DjIWLmxvcmF3YW4uRnJlcXVlbmN5UGxhbiKDAQoPVHhDb25maWd1cmF0aW9u",
            "EicKCm1vZHVsYXRpb24YCyABKA4yEy5sb3Jhd2FuLk1vZHVsYXRpb24SEQoJ",
            "ZGF0YV9yYXRlGAwgASgJEhAKCGJpdF9yYXRlGA0gASgNEhMKC2NvZGluZ19y",
            "YXRlGA4gASgJEg0KBWZfY250GA8gASgNIogEChJBY3RpdmF0aW9uTWV0YWRh",
            "dGESVAoHYXBwX2V1aRgBIAEoDEJD4t4fBkFwcEVVScjeHwDa3h8xZ2l0aHVi",
            "LmNvbS9UaGVUaGluZ3NOZXR3b3JrL3R0bi9jb3JlL3R5cGVzLkFwcEVVSRJU",
            "CgdkZXZfZXVpGAIgASgMQkPi3h8GRGV2RVVJyN4fANreHzFnaXRodWIuY29t",
            "L1RoZVRoaW5nc05ldHdvcmsvdHRuL2NvcmUvdHlwZXMuRGV2RVVJEkgKCGRl",
            "dl9hZGRyGAMgASgMQjba3h8yZ2l0aHViLmNvbS9UaGVUaGluZ3NOZXR3b3Jr",
            "L3R0bi9jb3JlL3R5cGVzLkRldkFkZHISSQoJbndrX3Nfa2V5GAQgASgMQjba",
            "3h8yZ2l0aHViLmNvbS9UaGVUaGluZ3NOZXR3b3JrL3R0bi9jb3JlL3R5cGVz",
            "Lk53a1NLZXkSJgoNcngxX2RyX29mZnNldBgLIAEoDUIP4t4fC1J4MURST2Zm",
            "c2V0EhkKBnJ4Ml9kchgMIAEoDUIJ4t4fBVJ4MkRSEhAKCHJ4X2RlbGF5GA0g",
            "ASgNEiwKB2NmX2xpc3QYDiABKAsyDy5sb3Jhd2FuLkNGTGlzdEIK4t4fBkNG",
            "TGlzdBIuCg5mcmVxdWVuY3lfcGxhbhgPIAEoDjIWLmxvcmF3YW4uRnJlcXVl",
            "bmN5UGxhbiKGAgoHTWVzc2FnZRImCgVtX2hkchgBIAEoCzINLmxvcmF3YW4u",
            "TUhEUkII0N4fAcjeHwASFAoDbWljGAIgASgMQgfi3h8DTUlDEjoKC21hY19w",
            "YXlsb2FkGAMgASgLMhMubG9yYXdhbi5NQUNQYXlsb2FkQg7i3h8KTUFDUGF5",
            "bG9hZEgAEjsKFGpvaW5fcmVxdWVzdF9wYXlsb2FkGAQgASgLMhsubG9yYXdh",
            "bi5Kb2luUmVxdWVzdFBheWxvYWRIABI5ChNqb2luX2FjY2VwdF9wYXlsb2Fk",
            "GAUgASgLMhoubG9yYXdhbi5Kb2luQWNjZXB0UGF5bG9hZEgAQgkKB1BheWxv",
            "YWQiRQoETUhEUhIeCgZtX3R5cGUYASABKA4yDi5sb3Jhd2FuLk1UeXBlEh0K",
            "BW1ham9yGAIgASgOMg4ubG9yYXdhbi5NYWpvciJpCgpNQUNQYXlsb2FkEiYK",
            "BWZfaGRyGAEgASgLMg0ubG9yYXdhbi5GSERSQgjQ3h8ByN4fABIOCgZmX3Bv",
            "cnQYAiABKAUSIwoLZnJtX3BheWxvYWQYAyABKAxCDuLeHwpGUk1QYXlsb2Fk",
            "IrgBCgRGSERSEkwKCGRldl9hZGRyGAEgASgMQjrI3h8A2t4fMmdpdGh1Yi5j",
            "b20vVGhlVGhpbmdzTmV0d29yay90dG4vY29yZS90eXBlcy5EZXZBZGRyEigK",
            "BmZfY3RybBgCIAEoCzIOLmxvcmF3YW4uRkN0cmxCCNDeHwHI3h8AEg0KBWZf",
            "Y250GAMgASgNEikKBmZfb3B0cxgEIAMoCzITLmxvcmF3YW4uTUFDQ29tbWFu",
            "ZEIEyN4fACJhCgVGQ3RybBIUCgNhZHIYASABKAhCB+LeHwNBRFISIgoLYWRy",
            "X2Fja19yZXEYAiABKAhCDeLeHwlBRFJBY2tSZXESCwoDYWNrGAMgASgIEhEK",
            "CWZfcGVuZGluZxgEIAEoCCIzCgpNQUNDb21tYW5kEhQKA2NpZBgBIAEoDUIH",
            "4t4fA0NJRBIPCgdwYXlsb2FkGAIgASgMIpACChJKb2luUmVxdWVzdFBheWxv",
            "YWQSVAoHYXBwX2V1aRgBIAEoDEJDyN4fAOLeHwZBcHBFVUna3h8xZ2l0aHVi",
            "LmNvbS9UaGVUaGluZ3NOZXR3b3JrL3R0bi9jb3JlL3R5cGVzLkFwcEVVSRJU",
            "CgdkZXZfZXVpGAIgASgMQkPI3h8A4t4fBkRldkVVSdreHzFnaXRodWIuY29t",
            "L1RoZVRoaW5nc05ldHdvcmsvdHRuL2NvcmUvdHlwZXMuRGV2RVVJEk4KCWRl",
            "dl9ub25jZRgDIAEoDEI7yN4fANreHzNnaXRodWIuY29tL1RoZVRoaW5nc05l",
            "dHdvcmsvdHRuL2NvcmUvdHlwZXMuRGV2Tm9uY2UiiwMKEUpvaW5BY2NlcHRQ",
            "YXlsb2FkEhEKCWVuY3J5cHRlZBgBIAEoDBJOCglhcHBfbm9uY2UYAiABKAxC",
            "O8jeHwDa3h8zZ2l0aHViLmNvbS9UaGVUaGluZ3NOZXR3b3JrL3R0bi9jb3Jl",
            "L3R5cGVzLkFwcE5vbmNlElEKBm5ldF9pZBgDIAEoDEJByN4fAOLeHwVOZXRJ",
            "RNreHzBnaXRodWIuY29tL1RoZVRoaW5nc05ldHdvcmsvdHRuL2NvcmUvdHlw",
            "ZXMuTmV0SUQSTAoIZGV2X2FkZHIYBCABKAxCOsjeHwDa3h8yZ2l0aHViLmNv",
            "bS9UaGVUaGluZ3NOZXR3b3JrL3R0bi9jb3JlL3R5cGVzLkRldkFkZHISMgoL",
            "ZGxfc2V0dGluZ3MYBSABKAsyEy5sb3Jhd2FuLkRMU2V0dGluZ3NCCNDeHwHI",
            "3h8AEhAKCHJ4X2RlbGF5GAYgASgNEiwKB2NmX2xpc3QYByABKAsyDy5sb3Jh",
            "d2FuLkNGTGlzdEIK4t4fBkNGTGlzdCJPCgpETFNldHRpbmdzEiYKDXJ4MV9k",
            "cl9vZmZzZXQYASABKA1CD+LeHwtSeDFEUk9mZnNldBIZCgZyeDJfZHIYAiAB",
            "KA1CCeLeHwVSeDJEUiIWCgZDRkxpc3QSDAoEZnJlcRgBIAMoDSofCgpNb2R1",
            "bGF0aW9uEggKBExPUkEQABIHCgNGU0sQASrHAQoNRnJlcXVlbmN5UGxhbhIO",
            "CgpFVV84NjNfODcwEAASDgoKVVNfOTAyXzkyOBABEg4KCkNOXzc3OV83ODcQ",
            "AhIKCgZFVV80MzMQAxIOCgpBVV85MTVfOTI4EAQSDgoKQ05fNDcwXzUxMBAF",
            "EgoKBkFTXzkyMxAGEg4KCkFTXzkyMF85MjMQPRIOCgpBU185MjNfOTI1ED4S",
            "DgoKS1JfOTIwXzkyMxAHEg4KCklOXzg2NV84NjcQCBIOCgpSVV84NjRfODcw",
            "EAkqFwoFTWFqb3ISDgoKTE9SQVdBTl9SMRAAKnoKBU1UeXBlEhAKDEpPSU5f",
            "UkVRVUVTVBAAEg8KC0pPSU5fQUNDRVBUEAESEgoOVU5DT05GSVJNRURfVVAQ",
            "AhIUChBVTkNPTkZJUk1FRF9ET1dOEAMSEAoMQ09ORklSTUVEX1VQEAQSEgoO",
            "Q09ORklSTUVEX0RPV04QBUKUAQopb3JnLnRoZXRoaW5nc25ldHdvcmsuYXBp",
            "LnByb3RvY29sLmxvcmF3YW5CDExvUmFXQU5Qcm90b1ABWjBnaXRodWIuY29t",
            "L1RoZVRoaW5nc05ldHdvcmsvYXBpL3Byb3RvY29sL2xvcmF3YW6qAiRUaGVU",
            "aGluZ3NOZXR3b3JrLkFQSS5Mb1JhV0FOUHJvdG9jb2xiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::TheThingsNetwork.API.LoRaWANProtocol.Modulation), typeof(global::TheThingsNetwork.API.LoRaWANProtocol.FrequencyPlan), typeof(global::TheThingsNetwork.API.LoRaWANProtocol.Major), typeof(global::TheThingsNetwork.API.LoRaWANProtocol.MType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::TheThingsNetwork.API.LoRaWANProtocol.Metadata), global::TheThingsNetwork.API.LoRaWANProtocol.Metadata.Parser, new[]{ "Modulation", "DataRate", "BitRate", "CodingRate", "FCnt", "FrequencyPlan" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TheThingsNetwork.API.LoRaWANProtocol.TxConfiguration), global::TheThingsNetwork.API.LoRaWANProtocol.TxConfiguration.Parser, new[]{ "Modulation", "DataRate", "BitRate", "CodingRate", "FCnt" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TheThingsNetwork.API.LoRaWANProtocol.ActivationMetadata), global::TheThingsNetwork.API.LoRaWANProtocol.ActivationMetadata.Parser, new[]{ "AppEui", "DevEui", "DevAddr", "NwkSKey", "Rx1DrOffset", "Rx2Dr", "RxDelay", "CfList", "FrequencyPlan" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TheThingsNetwork.API.LoRaWANProtocol.Message), global::TheThingsNetwork.API.LoRaWANProtocol.Message.Parser, new[]{ "MHdr", "Mic", "MacPayload", "JoinRequestPayload", "JoinAcceptPayload" }, new[]{ "Payload" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TheThingsNetwork.API.LoRaWANProtocol.MHDR), global::TheThingsNetwork.API.LoRaWANProtocol.MHDR.Parser, new[]{ "MType", "Major" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TheThingsNetwork.API.LoRaWANProtocol.MACPayload), global::TheThingsNetwork.API.LoRaWANProtocol.MACPayload.Parser, new[]{ "FHdr", "FPort", "FrmPayload" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TheThingsNetwork.API.LoRaWANProtocol.FHDR), global::TheThingsNetwork.API.LoRaWANProtocol.FHDR.Parser, new[]{ "DevAddr", "FCtrl", "FCnt", "FOpts" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TheThingsNetwork.API.LoRaWANProtocol.FCtrl), global::TheThingsNetwork.API.LoRaWANProtocol.FCtrl.Parser, new[]{ "Adr", "AdrAckReq", "Ack", "FPending" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TheThingsNetwork.API.LoRaWANProtocol.MACCommand), global::TheThingsNetwork.API.LoRaWANProtocol.MACCommand.Parser, new[]{ "Cid", "Payload" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TheThingsNetwork.API.LoRaWANProtocol.JoinRequestPayload), global::TheThingsNetwork.API.LoRaWANProtocol.JoinRequestPayload.Parser, new[]{ "AppEui", "DevEui", "DevNonce" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TheThingsNetwork.API.LoRaWANProtocol.JoinAcceptPayload), global::TheThingsNetwork.API.LoRaWANProtocol.JoinAcceptPayload.Parser, new[]{ "Encrypted", "AppNonce", "NetId", "DevAddr", "DlSettings", "RxDelay", "CfList" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TheThingsNetwork.API.LoRaWANProtocol.DLSettings), global::TheThingsNetwork.API.LoRaWANProtocol.DLSettings.Parser, new[]{ "Rx1DrOffset", "Rx2Dr" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TheThingsNetwork.API.LoRaWANProtocol.CFList), global::TheThingsNetwork.API.LoRaWANProtocol.CFList.Parser, new[]{ "Freq" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum Modulation {
    [pbr::OriginalName("LORA")] Lora = 0,
    [pbr::OriginalName("FSK")] Fsk = 1,
  }

  public enum FrequencyPlan {
    [pbr::OriginalName("EU_863_870")] Eu863870 = 0,
    [pbr::OriginalName("US_902_928")] Us902928 = 1,
    [pbr::OriginalName("CN_779_787")] Cn779787 = 2,
    [pbr::OriginalName("EU_433")] Eu433 = 3,
    [pbr::OriginalName("AU_915_928")] Au915928 = 4,
    [pbr::OriginalName("CN_470_510")] Cn470510 = 5,
    [pbr::OriginalName("AS_923")] As923 = 6,
    [pbr::OriginalName("AS_920_923")] As920923 = 61,
    [pbr::OriginalName("AS_923_925")] As923925 = 62,
    [pbr::OriginalName("KR_920_923")] Kr920923 = 7,
    [pbr::OriginalName("IN_865_867")] In865867 = 8,
    [pbr::OriginalName("RU_864_870")] Ru864870 = 9,
  }

  public enum Major {
    [pbr::OriginalName("LORAWAN_R1")] LorawanR1 = 0,
  }

  public enum MType {
    [pbr::OriginalName("JOIN_REQUEST")] JoinRequest = 0,
    [pbr::OriginalName("JOIN_ACCEPT")] JoinAccept = 1,
    [pbr::OriginalName("UNCONFIRMED_UP")] UnconfirmedUp = 2,
    [pbr::OriginalName("UNCONFIRMED_DOWN")] UnconfirmedDown = 3,
    [pbr::OriginalName("CONFIRMED_UP")] ConfirmedUp = 4,
    [pbr::OriginalName("CONFIRMED_DOWN")] ConfirmedDown = 5,
  }

  #endregion

  #region Messages
  public sealed partial class Metadata : pb::IMessage<Metadata> {
    private static readonly pb::MessageParser<Metadata> _parser = new pb::MessageParser<Metadata>(() => new Metadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Metadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TheThingsNetwork.API.LoRaWANProtocol.LorawanReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Metadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Metadata(Metadata other) : this() {
      modulation_ = other.modulation_;
      dataRate_ = other.dataRate_;
      bitRate_ = other.bitRate_;
      codingRate_ = other.codingRate_;
      fCnt_ = other.fCnt_;
      frequencyPlan_ = other.frequencyPlan_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Metadata Clone() {
      return new Metadata(this);
    }

    /// <summary>Field number for the "modulation" field.</summary>
    public const int ModulationFieldNumber = 11;
    private global::TheThingsNetwork.API.LoRaWANProtocol.Modulation modulation_ = global::TheThingsNetwork.API.LoRaWANProtocol.Modulation.Lora;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TheThingsNetwork.API.LoRaWANProtocol.Modulation Modulation {
      get { return modulation_; }
      set {
        modulation_ = value;
      }
    }

    /// <summary>Field number for the "data_rate" field.</summary>
    public const int DataRateFieldNumber = 12;
    private string dataRate_ = "";
    /// <summary>
    /// LoRa data rate - SF{spreadingfactor}BW{bandwidth}
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DataRate {
      get { return dataRate_; }
      set {
        dataRate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "bit_rate" field.</summary>
    public const int BitRateFieldNumber = 13;
    private uint bitRate_;
    /// <summary>
    /// FSK bit rate in bit/s
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint BitRate {
      get { return bitRate_; }
      set {
        bitRate_ = value;
      }
    }

    /// <summary>Field number for the "coding_rate" field.</summary>
    public const int CodingRateFieldNumber = 14;
    private string codingRate_ = "";
    /// <summary>
    /// LoRa coding rate
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CodingRate {
      get { return codingRate_; }
      set {
        codingRate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "f_cnt" field.</summary>
    public const int FCntFieldNumber = 15;
    private uint fCnt_;
    /// <summary>
    /// Store the full 32 bit FCnt (deprecated; do not use)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint FCnt {
      get { return fCnt_; }
      set {
        fCnt_ = value;
      }
    }

    /// <summary>Field number for the "frequency_plan" field.</summary>
    public const int FrequencyPlanFieldNumber = 16;
    private global::TheThingsNetwork.API.LoRaWANProtocol.FrequencyPlan frequencyPlan_ = global::TheThingsNetwork.API.LoRaWANProtocol.FrequencyPlan.Eu863870;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TheThingsNetwork.API.LoRaWANProtocol.FrequencyPlan FrequencyPlan {
      get { return frequencyPlan_; }
      set {
        frequencyPlan_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Metadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Metadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Modulation != other.Modulation) return false;
      if (DataRate != other.DataRate) return false;
      if (BitRate != other.BitRate) return false;
      if (CodingRate != other.CodingRate) return false;
      if (FCnt != other.FCnt) return false;
      if (FrequencyPlan != other.FrequencyPlan) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Modulation != global::TheThingsNetwork.API.LoRaWANProtocol.Modulation.Lora) hash ^= Modulation.GetHashCode();
      if (DataRate.Length != 0) hash ^= DataRate.GetHashCode();
      if (BitRate != 0) hash ^= BitRate.GetHashCode();
      if (CodingRate.Length != 0) hash ^= CodingRate.GetHashCode();
      if (FCnt != 0) hash ^= FCnt.GetHashCode();
      if (FrequencyPlan != global::TheThingsNetwork.API.LoRaWANProtocol.FrequencyPlan.Eu863870) hash ^= FrequencyPlan.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Modulation != global::TheThingsNetwork.API.LoRaWANProtocol.Modulation.Lora) {
        output.WriteRawTag(88);
        output.WriteEnum((int) Modulation);
      }
      if (DataRate.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(DataRate);
      }
      if (BitRate != 0) {
        output.WriteRawTag(104);
        output.WriteUInt32(BitRate);
      }
      if (CodingRate.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(CodingRate);
      }
      if (FCnt != 0) {
        output.WriteRawTag(120);
        output.WriteUInt32(FCnt);
      }
      if (FrequencyPlan != global::TheThingsNetwork.API.LoRaWANProtocol.FrequencyPlan.Eu863870) {
        output.WriteRawTag(128, 1);
        output.WriteEnum((int) FrequencyPlan);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Modulation != global::TheThingsNetwork.API.LoRaWANProtocol.Modulation.Lora) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Modulation);
      }
      if (DataRate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DataRate);
      }
      if (BitRate != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BitRate);
      }
      if (CodingRate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CodingRate);
      }
      if (FCnt != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(FCnt);
      }
      if (FrequencyPlan != global::TheThingsNetwork.API.LoRaWANProtocol.FrequencyPlan.Eu863870) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) FrequencyPlan);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Metadata other) {
      if (other == null) {
        return;
      }
      if (other.Modulation != global::TheThingsNetwork.API.LoRaWANProtocol.Modulation.Lora) {
        Modulation = other.Modulation;
      }
      if (other.DataRate.Length != 0) {
        DataRate = other.DataRate;
      }
      if (other.BitRate != 0) {
        BitRate = other.BitRate;
      }
      if (other.CodingRate.Length != 0) {
        CodingRate = other.CodingRate;
      }
      if (other.FCnt != 0) {
        FCnt = other.FCnt;
      }
      if (other.FrequencyPlan != global::TheThingsNetwork.API.LoRaWANProtocol.FrequencyPlan.Eu863870) {
        FrequencyPlan = other.FrequencyPlan;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 88: {
            Modulation = (global::TheThingsNetwork.API.LoRaWANProtocol.Modulation) input.ReadEnum();
            break;
          }
          case 98: {
            DataRate = input.ReadString();
            break;
          }
          case 104: {
            BitRate = input.ReadUInt32();
            break;
          }
          case 114: {
            CodingRate = input.ReadString();
            break;
          }
          case 120: {
            FCnt = input.ReadUInt32();
            break;
          }
          case 128: {
            FrequencyPlan = (global::TheThingsNetwork.API.LoRaWANProtocol.FrequencyPlan) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TxConfiguration : pb::IMessage<TxConfiguration> {
    private static readonly pb::MessageParser<TxConfiguration> _parser = new pb::MessageParser<TxConfiguration>(() => new TxConfiguration());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TxConfiguration> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TheThingsNetwork.API.LoRaWANProtocol.LorawanReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TxConfiguration() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TxConfiguration(TxConfiguration other) : this() {
      modulation_ = other.modulation_;
      dataRate_ = other.dataRate_;
      bitRate_ = other.bitRate_;
      codingRate_ = other.codingRate_;
      fCnt_ = other.fCnt_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TxConfiguration Clone() {
      return new TxConfiguration(this);
    }

    /// <summary>Field number for the "modulation" field.</summary>
    public const int ModulationFieldNumber = 11;
    private global::TheThingsNetwork.API.LoRaWANProtocol.Modulation modulation_ = global::TheThingsNetwork.API.LoRaWANProtocol.Modulation.Lora;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TheThingsNetwork.API.LoRaWANProtocol.Modulation Modulation {
      get { return modulation_; }
      set {
        modulation_ = value;
      }
    }

    /// <summary>Field number for the "data_rate" field.</summary>
    public const int DataRateFieldNumber = 12;
    private string dataRate_ = "";
    /// <summary>
    /// LoRa data rate - SF{spreadingfactor}BW{bandwidth}
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DataRate {
      get { return dataRate_; }
      set {
        dataRate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "bit_rate" field.</summary>
    public const int BitRateFieldNumber = 13;
    private uint bitRate_;
    /// <summary>
    /// FSK bit rate in bit/s
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint BitRate {
      get { return bitRate_; }
      set {
        bitRate_ = value;
      }
    }

    /// <summary>Field number for the "coding_rate" field.</summary>
    public const int CodingRateFieldNumber = 14;
    private string codingRate_ = "";
    /// <summary>
    /// LoRa coding rate
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CodingRate {
      get { return codingRate_; }
      set {
        codingRate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "f_cnt" field.</summary>
    public const int FCntFieldNumber = 15;
    private uint fCnt_;
    /// <summary>
    /// Store the full 32 bit FCnt (deprecated; do not use)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint FCnt {
      get { return fCnt_; }
      set {
        fCnt_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TxConfiguration);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TxConfiguration other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Modulation != other.Modulation) return false;
      if (DataRate != other.DataRate) return false;
      if (BitRate != other.BitRate) return false;
      if (CodingRate != other.CodingRate) return false;
      if (FCnt != other.FCnt) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Modulation != global::TheThingsNetwork.API.LoRaWANProtocol.Modulation.Lora) hash ^= Modulation.GetHashCode();
      if (DataRate.Length != 0) hash ^= DataRate.GetHashCode();
      if (BitRate != 0) hash ^= BitRate.GetHashCode();
      if (CodingRate.Length != 0) hash ^= CodingRate.GetHashCode();
      if (FCnt != 0) hash ^= FCnt.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Modulation != global::TheThingsNetwork.API.LoRaWANProtocol.Modulation.Lora) {
        output.WriteRawTag(88);
        output.WriteEnum((int) Modulation);
      }
      if (DataRate.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(DataRate);
      }
      if (BitRate != 0) {
        output.WriteRawTag(104);
        output.WriteUInt32(BitRate);
      }
      if (CodingRate.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(CodingRate);
      }
      if (FCnt != 0) {
        output.WriteRawTag(120);
        output.WriteUInt32(FCnt);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Modulation != global::TheThingsNetwork.API.LoRaWANProtocol.Modulation.Lora) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Modulation);
      }
      if (DataRate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DataRate);
      }
      if (BitRate != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BitRate);
      }
      if (CodingRate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CodingRate);
      }
      if (FCnt != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(FCnt);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TxConfiguration other) {
      if (other == null) {
        return;
      }
      if (other.Modulation != global::TheThingsNetwork.API.LoRaWANProtocol.Modulation.Lora) {
        Modulation = other.Modulation;
      }
      if (other.DataRate.Length != 0) {
        DataRate = other.DataRate;
      }
      if (other.BitRate != 0) {
        BitRate = other.BitRate;
      }
      if (other.CodingRate.Length != 0) {
        CodingRate = other.CodingRate;
      }
      if (other.FCnt != 0) {
        FCnt = other.FCnt;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 88: {
            Modulation = (global::TheThingsNetwork.API.LoRaWANProtocol.Modulation) input.ReadEnum();
            break;
          }
          case 98: {
            DataRate = input.ReadString();
            break;
          }
          case 104: {
            BitRate = input.ReadUInt32();
            break;
          }
          case 114: {
            CodingRate = input.ReadString();
            break;
          }
          case 120: {
            FCnt = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ActivationMetadata : pb::IMessage<ActivationMetadata> {
    private static readonly pb::MessageParser<ActivationMetadata> _parser = new pb::MessageParser<ActivationMetadata>(() => new ActivationMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ActivationMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TheThingsNetwork.API.LoRaWANProtocol.LorawanReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivationMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivationMetadata(ActivationMetadata other) : this() {
      appEui_ = other.appEui_;
      devEui_ = other.devEui_;
      devAddr_ = other.devAddr_;
      nwkSKey_ = other.nwkSKey_;
      rx1DrOffset_ = other.rx1DrOffset_;
      rx2Dr_ = other.rx2Dr_;
      rxDelay_ = other.rxDelay_;
      cfList_ = other.cfList_ != null ? other.cfList_.Clone() : null;
      frequencyPlan_ = other.frequencyPlan_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivationMetadata Clone() {
      return new ActivationMetadata(this);
    }

    /// <summary>Field number for the "app_eui" field.</summary>
    public const int AppEuiFieldNumber = 1;
    private pb::ByteString appEui_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString AppEui {
      get { return appEui_; }
      set {
        appEui_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "dev_eui" field.</summary>
    public const int DevEuiFieldNumber = 2;
    private pb::ByteString devEui_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString DevEui {
      get { return devEui_; }
      set {
        devEui_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "dev_addr" field.</summary>
    public const int DevAddrFieldNumber = 3;
    private pb::ByteString devAddr_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString DevAddr {
      get { return devAddr_; }
      set {
        devAddr_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "nwk_s_key" field.</summary>
    public const int NwkSKeyFieldNumber = 4;
    private pb::ByteString nwkSKey_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString NwkSKey {
      get { return nwkSKey_; }
      set {
        nwkSKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "rx1_dr_offset" field.</summary>
    public const int Rx1DrOffsetFieldNumber = 11;
    private uint rx1DrOffset_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Rx1DrOffset {
      get { return rx1DrOffset_; }
      set {
        rx1DrOffset_ = value;
      }
    }

    /// <summary>Field number for the "rx2_dr" field.</summary>
    public const int Rx2DrFieldNumber = 12;
    private uint rx2Dr_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Rx2Dr {
      get { return rx2Dr_; }
      set {
        rx2Dr_ = value;
      }
    }

    /// <summary>Field number for the "rx_delay" field.</summary>
    public const int RxDelayFieldNumber = 13;
    private uint rxDelay_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint RxDelay {
      get { return rxDelay_; }
      set {
        rxDelay_ = value;
      }
    }

    /// <summary>Field number for the "cf_list" field.</summary>
    public const int CfListFieldNumber = 14;
    private global::TheThingsNetwork.API.LoRaWANProtocol.CFList cfList_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TheThingsNetwork.API.LoRaWANProtocol.CFList CfList {
      get { return cfList_; }
      set {
        cfList_ = value;
      }
    }

    /// <summary>Field number for the "frequency_plan" field.</summary>
    public const int FrequencyPlanFieldNumber = 15;
    private global::TheThingsNetwork.API.LoRaWANProtocol.FrequencyPlan frequencyPlan_ = global::TheThingsNetwork.API.LoRaWANProtocol.FrequencyPlan.Eu863870;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TheThingsNetwork.API.LoRaWANProtocol.FrequencyPlan FrequencyPlan {
      get { return frequencyPlan_; }
      set {
        frequencyPlan_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ActivationMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ActivationMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AppEui != other.AppEui) return false;
      if (DevEui != other.DevEui) return false;
      if (DevAddr != other.DevAddr) return false;
      if (NwkSKey != other.NwkSKey) return false;
      if (Rx1DrOffset != other.Rx1DrOffset) return false;
      if (Rx2Dr != other.Rx2Dr) return false;
      if (RxDelay != other.RxDelay) return false;
      if (!object.Equals(CfList, other.CfList)) return false;
      if (FrequencyPlan != other.FrequencyPlan) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AppEui.Length != 0) hash ^= AppEui.GetHashCode();
      if (DevEui.Length != 0) hash ^= DevEui.GetHashCode();
      if (DevAddr.Length != 0) hash ^= DevAddr.GetHashCode();
      if (NwkSKey.Length != 0) hash ^= NwkSKey.GetHashCode();
      if (Rx1DrOffset != 0) hash ^= Rx1DrOffset.GetHashCode();
      if (Rx2Dr != 0) hash ^= Rx2Dr.GetHashCode();
      if (RxDelay != 0) hash ^= RxDelay.GetHashCode();
      if (cfList_ != null) hash ^= CfList.GetHashCode();
      if (FrequencyPlan != global::TheThingsNetwork.API.LoRaWANProtocol.FrequencyPlan.Eu863870) hash ^= FrequencyPlan.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AppEui.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(AppEui);
      }
      if (DevEui.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(DevEui);
      }
      if (DevAddr.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(DevAddr);
      }
      if (NwkSKey.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(NwkSKey);
      }
      if (Rx1DrOffset != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(Rx1DrOffset);
      }
      if (Rx2Dr != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(Rx2Dr);
      }
      if (RxDelay != 0) {
        output.WriteRawTag(104);
        output.WriteUInt32(RxDelay);
      }
      if (cfList_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(CfList);
      }
      if (FrequencyPlan != global::TheThingsNetwork.API.LoRaWANProtocol.FrequencyPlan.Eu863870) {
        output.WriteRawTag(120);
        output.WriteEnum((int) FrequencyPlan);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AppEui.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(AppEui);
      }
      if (DevEui.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(DevEui);
      }
      if (DevAddr.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(DevAddr);
      }
      if (NwkSKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(NwkSKey);
      }
      if (Rx1DrOffset != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Rx1DrOffset);
      }
      if (Rx2Dr != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Rx2Dr);
      }
      if (RxDelay != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RxDelay);
      }
      if (cfList_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CfList);
      }
      if (FrequencyPlan != global::TheThingsNetwork.API.LoRaWANProtocol.FrequencyPlan.Eu863870) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) FrequencyPlan);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ActivationMetadata other) {
      if (other == null) {
        return;
      }
      if (other.AppEui.Length != 0) {
        AppEui = other.AppEui;
      }
      if (other.DevEui.Length != 0) {
        DevEui = other.DevEui;
      }
      if (other.DevAddr.Length != 0) {
        DevAddr = other.DevAddr;
      }
      if (other.NwkSKey.Length != 0) {
        NwkSKey = other.NwkSKey;
      }
      if (other.Rx1DrOffset != 0) {
        Rx1DrOffset = other.Rx1DrOffset;
      }
      if (other.Rx2Dr != 0) {
        Rx2Dr = other.Rx2Dr;
      }
      if (other.RxDelay != 0) {
        RxDelay = other.RxDelay;
      }
      if (other.cfList_ != null) {
        if (cfList_ == null) {
          CfList = new global::TheThingsNetwork.API.LoRaWANProtocol.CFList();
        }
        CfList.MergeFrom(other.CfList);
      }
      if (other.FrequencyPlan != global::TheThingsNetwork.API.LoRaWANProtocol.FrequencyPlan.Eu863870) {
        FrequencyPlan = other.FrequencyPlan;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AppEui = input.ReadBytes();
            break;
          }
          case 18: {
            DevEui = input.ReadBytes();
            break;
          }
          case 26: {
            DevAddr = input.ReadBytes();
            break;
          }
          case 34: {
            NwkSKey = input.ReadBytes();
            break;
          }
          case 88: {
            Rx1DrOffset = input.ReadUInt32();
            break;
          }
          case 96: {
            Rx2Dr = input.ReadUInt32();
            break;
          }
          case 104: {
            RxDelay = input.ReadUInt32();
            break;
          }
          case 114: {
            if (cfList_ == null) {
              CfList = new global::TheThingsNetwork.API.LoRaWANProtocol.CFList();
            }
            input.ReadMessage(CfList);
            break;
          }
          case 120: {
            FrequencyPlan = (global::TheThingsNetwork.API.LoRaWANProtocol.FrequencyPlan) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Message : pb::IMessage<Message> {
    private static readonly pb::MessageParser<Message> _parser = new pb::MessageParser<Message>(() => new Message());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Message> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TheThingsNetwork.API.LoRaWANProtocol.LorawanReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Message() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Message(Message other) : this() {
      mHdr_ = other.mHdr_ != null ? other.mHdr_.Clone() : null;
      mic_ = other.mic_;
      switch (other.PayloadCase) {
        case PayloadOneofCase.MacPayload:
          MacPayload = other.MacPayload.Clone();
          break;
        case PayloadOneofCase.JoinRequestPayload:
          JoinRequestPayload = other.JoinRequestPayload.Clone();
          break;
        case PayloadOneofCase.JoinAcceptPayload:
          JoinAcceptPayload = other.JoinAcceptPayload.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Message Clone() {
      return new Message(this);
    }

    /// <summary>Field number for the "m_hdr" field.</summary>
    public const int MHdrFieldNumber = 1;
    private global::TheThingsNetwork.API.LoRaWANProtocol.MHDR mHdr_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TheThingsNetwork.API.LoRaWANProtocol.MHDR MHdr {
      get { return mHdr_; }
      set {
        mHdr_ = value;
      }
    }

    /// <summary>Field number for the "mic" field.</summary>
    public const int MicFieldNumber = 2;
    private pb::ByteString mic_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Mic {
      get { return mic_; }
      set {
        mic_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "mac_payload" field.</summary>
    public const int MacPayloadFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TheThingsNetwork.API.LoRaWANProtocol.MACPayload MacPayload {
      get { return payloadCase_ == PayloadOneofCase.MacPayload ? (global::TheThingsNetwork.API.LoRaWANProtocol.MACPayload) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.MacPayload;
      }
    }

    /// <summary>Field number for the "join_request_payload" field.</summary>
    public const int JoinRequestPayloadFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TheThingsNetwork.API.LoRaWANProtocol.JoinRequestPayload JoinRequestPayload {
      get { return payloadCase_ == PayloadOneofCase.JoinRequestPayload ? (global::TheThingsNetwork.API.LoRaWANProtocol.JoinRequestPayload) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.JoinRequestPayload;
      }
    }

    /// <summary>Field number for the "join_accept_payload" field.</summary>
    public const int JoinAcceptPayloadFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TheThingsNetwork.API.LoRaWANProtocol.JoinAcceptPayload JoinAcceptPayload {
      get { return payloadCase_ == PayloadOneofCase.JoinAcceptPayload ? (global::TheThingsNetwork.API.LoRaWANProtocol.JoinAcceptPayload) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.JoinAcceptPayload;
      }
    }

    private object payload_;
    /// <summary>Enum of possible cases for the "Payload" oneof.</summary>
    public enum PayloadOneofCase {
      None = 0,
      MacPayload = 3,
      JoinRequestPayload = 4,
      JoinAcceptPayload = 5,
    }
    private PayloadOneofCase payloadCase_ = PayloadOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PayloadOneofCase PayloadCase {
      get { return payloadCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPayload() {
      payloadCase_ = PayloadOneofCase.None;
      payload_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Message);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Message other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(MHdr, other.MHdr)) return false;
      if (Mic != other.Mic) return false;
      if (!object.Equals(MacPayload, other.MacPayload)) return false;
      if (!object.Equals(JoinRequestPayload, other.JoinRequestPayload)) return false;
      if (!object.Equals(JoinAcceptPayload, other.JoinAcceptPayload)) return false;
      if (PayloadCase != other.PayloadCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (mHdr_ != null) hash ^= MHdr.GetHashCode();
      if (Mic.Length != 0) hash ^= Mic.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.MacPayload) hash ^= MacPayload.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.JoinRequestPayload) hash ^= JoinRequestPayload.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.JoinAcceptPayload) hash ^= JoinAcceptPayload.GetHashCode();
      hash ^= (int) payloadCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (mHdr_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(MHdr);
      }
      if (Mic.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Mic);
      }
      if (payloadCase_ == PayloadOneofCase.MacPayload) {
        output.WriteRawTag(26);
        output.WriteMessage(MacPayload);
      }
      if (payloadCase_ == PayloadOneofCase.JoinRequestPayload) {
        output.WriteRawTag(34);
        output.WriteMessage(JoinRequestPayload);
      }
      if (payloadCase_ == PayloadOneofCase.JoinAcceptPayload) {
        output.WriteRawTag(42);
        output.WriteMessage(JoinAcceptPayload);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (mHdr_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MHdr);
      }
      if (Mic.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Mic);
      }
      if (payloadCase_ == PayloadOneofCase.MacPayload) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MacPayload);
      }
      if (payloadCase_ == PayloadOneofCase.JoinRequestPayload) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(JoinRequestPayload);
      }
      if (payloadCase_ == PayloadOneofCase.JoinAcceptPayload) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(JoinAcceptPayload);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Message other) {
      if (other == null) {
        return;
      }
      if (other.mHdr_ != null) {
        if (mHdr_ == null) {
          MHdr = new global::TheThingsNetwork.API.LoRaWANProtocol.MHDR();
        }
        MHdr.MergeFrom(other.MHdr);
      }
      if (other.Mic.Length != 0) {
        Mic = other.Mic;
      }
      switch (other.PayloadCase) {
        case PayloadOneofCase.MacPayload:
          if (MacPayload == null) {
            MacPayload = new global::TheThingsNetwork.API.LoRaWANProtocol.MACPayload();
          }
          MacPayload.MergeFrom(other.MacPayload);
          break;
        case PayloadOneofCase.JoinRequestPayload:
          if (JoinRequestPayload == null) {
            JoinRequestPayload = new global::TheThingsNetwork.API.LoRaWANProtocol.JoinRequestPayload();
          }
          JoinRequestPayload.MergeFrom(other.JoinRequestPayload);
          break;
        case PayloadOneofCase.JoinAcceptPayload:
          if (JoinAcceptPayload == null) {
            JoinAcceptPayload = new global::TheThingsNetwork.API.LoRaWANProtocol.JoinAcceptPayload();
          }
          JoinAcceptPayload.MergeFrom(other.JoinAcceptPayload);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (mHdr_ == null) {
              MHdr = new global::TheThingsNetwork.API.LoRaWANProtocol.MHDR();
            }
            input.ReadMessage(MHdr);
            break;
          }
          case 18: {
            Mic = input.ReadBytes();
            break;
          }
          case 26: {
            global::TheThingsNetwork.API.LoRaWANProtocol.MACPayload subBuilder = new global::TheThingsNetwork.API.LoRaWANProtocol.MACPayload();
            if (payloadCase_ == PayloadOneofCase.MacPayload) {
              subBuilder.MergeFrom(MacPayload);
            }
            input.ReadMessage(subBuilder);
            MacPayload = subBuilder;
            break;
          }
          case 34: {
            global::TheThingsNetwork.API.LoRaWANProtocol.JoinRequestPayload subBuilder = new global::TheThingsNetwork.API.LoRaWANProtocol.JoinRequestPayload();
            if (payloadCase_ == PayloadOneofCase.JoinRequestPayload) {
              subBuilder.MergeFrom(JoinRequestPayload);
            }
            input.ReadMessage(subBuilder);
            JoinRequestPayload = subBuilder;
            break;
          }
          case 42: {
            global::TheThingsNetwork.API.LoRaWANProtocol.JoinAcceptPayload subBuilder = new global::TheThingsNetwork.API.LoRaWANProtocol.JoinAcceptPayload();
            if (payloadCase_ == PayloadOneofCase.JoinAcceptPayload) {
              subBuilder.MergeFrom(JoinAcceptPayload);
            }
            input.ReadMessage(subBuilder);
            JoinAcceptPayload = subBuilder;
            break;
          }
        }
      }
    }

  }

  public sealed partial class MHDR : pb::IMessage<MHDR> {
    private static readonly pb::MessageParser<MHDR> _parser = new pb::MessageParser<MHDR>(() => new MHDR());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MHDR> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TheThingsNetwork.API.LoRaWANProtocol.LorawanReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MHDR() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MHDR(MHDR other) : this() {
      mType_ = other.mType_;
      major_ = other.major_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MHDR Clone() {
      return new MHDR(this);
    }

    /// <summary>Field number for the "m_type" field.</summary>
    public const int MTypeFieldNumber = 1;
    private global::TheThingsNetwork.API.LoRaWANProtocol.MType mType_ = global::TheThingsNetwork.API.LoRaWANProtocol.MType.JoinRequest;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TheThingsNetwork.API.LoRaWANProtocol.MType MType {
      get { return mType_; }
      set {
        mType_ = value;
      }
    }

    /// <summary>Field number for the "major" field.</summary>
    public const int MajorFieldNumber = 2;
    private global::TheThingsNetwork.API.LoRaWANProtocol.Major major_ = global::TheThingsNetwork.API.LoRaWANProtocol.Major.LorawanR1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TheThingsNetwork.API.LoRaWANProtocol.Major Major {
      get { return major_; }
      set {
        major_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MHDR);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MHDR other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MType != other.MType) return false;
      if (Major != other.Major) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MType != global::TheThingsNetwork.API.LoRaWANProtocol.MType.JoinRequest) hash ^= MType.GetHashCode();
      if (Major != global::TheThingsNetwork.API.LoRaWANProtocol.Major.LorawanR1) hash ^= Major.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MType != global::TheThingsNetwork.API.LoRaWANProtocol.MType.JoinRequest) {
        output.WriteRawTag(8);
        output.WriteEnum((int) MType);
      }
      if (Major != global::TheThingsNetwork.API.LoRaWANProtocol.Major.LorawanR1) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Major);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MType != global::TheThingsNetwork.API.LoRaWANProtocol.MType.JoinRequest) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MType);
      }
      if (Major != global::TheThingsNetwork.API.LoRaWANProtocol.Major.LorawanR1) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Major);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MHDR other) {
      if (other == null) {
        return;
      }
      if (other.MType != global::TheThingsNetwork.API.LoRaWANProtocol.MType.JoinRequest) {
        MType = other.MType;
      }
      if (other.Major != global::TheThingsNetwork.API.LoRaWANProtocol.Major.LorawanR1) {
        Major = other.Major;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MType = (global::TheThingsNetwork.API.LoRaWANProtocol.MType) input.ReadEnum();
            break;
          }
          case 16: {
            Major = (global::TheThingsNetwork.API.LoRaWANProtocol.Major) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class MACPayload : pb::IMessage<MACPayload> {
    private static readonly pb::MessageParser<MACPayload> _parser = new pb::MessageParser<MACPayload>(() => new MACPayload());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MACPayload> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TheThingsNetwork.API.LoRaWANProtocol.LorawanReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MACPayload() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MACPayload(MACPayload other) : this() {
      fHdr_ = other.fHdr_ != null ? other.fHdr_.Clone() : null;
      fPort_ = other.fPort_;
      frmPayload_ = other.frmPayload_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MACPayload Clone() {
      return new MACPayload(this);
    }

    /// <summary>Field number for the "f_hdr" field.</summary>
    public const int FHdrFieldNumber = 1;
    private global::TheThingsNetwork.API.LoRaWANProtocol.FHDR fHdr_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TheThingsNetwork.API.LoRaWANProtocol.FHDR FHdr {
      get { return fHdr_; }
      set {
        fHdr_ = value;
      }
    }

    /// <summary>Field number for the "f_port" field.</summary>
    public const int FPortFieldNumber = 2;
    private int fPort_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FPort {
      get { return fPort_; }
      set {
        fPort_ = value;
      }
    }

    /// <summary>Field number for the "frm_payload" field.</summary>
    public const int FrmPayloadFieldNumber = 3;
    private pb::ByteString frmPayload_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString FrmPayload {
      get { return frmPayload_; }
      set {
        frmPayload_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MACPayload);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MACPayload other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(FHdr, other.FHdr)) return false;
      if (FPort != other.FPort) return false;
      if (FrmPayload != other.FrmPayload) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (fHdr_ != null) hash ^= FHdr.GetHashCode();
      if (FPort != 0) hash ^= FPort.GetHashCode();
      if (FrmPayload.Length != 0) hash ^= FrmPayload.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (fHdr_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(FHdr);
      }
      if (FPort != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(FPort);
      }
      if (FrmPayload.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(FrmPayload);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (fHdr_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FHdr);
      }
      if (FPort != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FPort);
      }
      if (FrmPayload.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(FrmPayload);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MACPayload other) {
      if (other == null) {
        return;
      }
      if (other.fHdr_ != null) {
        if (fHdr_ == null) {
          FHdr = new global::TheThingsNetwork.API.LoRaWANProtocol.FHDR();
        }
        FHdr.MergeFrom(other.FHdr);
      }
      if (other.FPort != 0) {
        FPort = other.FPort;
      }
      if (other.FrmPayload.Length != 0) {
        FrmPayload = other.FrmPayload;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (fHdr_ == null) {
              FHdr = new global::TheThingsNetwork.API.LoRaWANProtocol.FHDR();
            }
            input.ReadMessage(FHdr);
            break;
          }
          case 16: {
            FPort = input.ReadInt32();
            break;
          }
          case 26: {
            FrmPayload = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class FHDR : pb::IMessage<FHDR> {
    private static readonly pb::MessageParser<FHDR> _parser = new pb::MessageParser<FHDR>(() => new FHDR());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FHDR> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TheThingsNetwork.API.LoRaWANProtocol.LorawanReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FHDR() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FHDR(FHDR other) : this() {
      devAddr_ = other.devAddr_;
      fCtrl_ = other.fCtrl_ != null ? other.fCtrl_.Clone() : null;
      fCnt_ = other.fCnt_;
      fOpts_ = other.fOpts_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FHDR Clone() {
      return new FHDR(this);
    }

    /// <summary>Field number for the "dev_addr" field.</summary>
    public const int DevAddrFieldNumber = 1;
    private pb::ByteString devAddr_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString DevAddr {
      get { return devAddr_; }
      set {
        devAddr_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "f_ctrl" field.</summary>
    public const int FCtrlFieldNumber = 2;
    private global::TheThingsNetwork.API.LoRaWANProtocol.FCtrl fCtrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TheThingsNetwork.API.LoRaWANProtocol.FCtrl FCtrl {
      get { return fCtrl_; }
      set {
        fCtrl_ = value;
      }
    }

    /// <summary>Field number for the "f_cnt" field.</summary>
    public const int FCntFieldNumber = 3;
    private uint fCnt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint FCnt {
      get { return fCnt_; }
      set {
        fCnt_ = value;
      }
    }

    /// <summary>Field number for the "f_opts" field.</summary>
    public const int FOptsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::TheThingsNetwork.API.LoRaWANProtocol.MACCommand> _repeated_fOpts_codec
        = pb::FieldCodec.ForMessage(34, global::TheThingsNetwork.API.LoRaWANProtocol.MACCommand.Parser);
    private readonly pbc::RepeatedField<global::TheThingsNetwork.API.LoRaWANProtocol.MACCommand> fOpts_ = new pbc::RepeatedField<global::TheThingsNetwork.API.LoRaWANProtocol.MACCommand>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TheThingsNetwork.API.LoRaWANProtocol.MACCommand> FOpts {
      get { return fOpts_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FHDR);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FHDR other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DevAddr != other.DevAddr) return false;
      if (!object.Equals(FCtrl, other.FCtrl)) return false;
      if (FCnt != other.FCnt) return false;
      if(!fOpts_.Equals(other.fOpts_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DevAddr.Length != 0) hash ^= DevAddr.GetHashCode();
      if (fCtrl_ != null) hash ^= FCtrl.GetHashCode();
      if (FCnt != 0) hash ^= FCnt.GetHashCode();
      hash ^= fOpts_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (DevAddr.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(DevAddr);
      }
      if (fCtrl_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(FCtrl);
      }
      if (FCnt != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(FCnt);
      }
      fOpts_.WriteTo(output, _repeated_fOpts_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DevAddr.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(DevAddr);
      }
      if (fCtrl_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FCtrl);
      }
      if (FCnt != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(FCnt);
      }
      size += fOpts_.CalculateSize(_repeated_fOpts_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FHDR other) {
      if (other == null) {
        return;
      }
      if (other.DevAddr.Length != 0) {
        DevAddr = other.DevAddr;
      }
      if (other.fCtrl_ != null) {
        if (fCtrl_ == null) {
          FCtrl = new global::TheThingsNetwork.API.LoRaWANProtocol.FCtrl();
        }
        FCtrl.MergeFrom(other.FCtrl);
      }
      if (other.FCnt != 0) {
        FCnt = other.FCnt;
      }
      fOpts_.Add(other.fOpts_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DevAddr = input.ReadBytes();
            break;
          }
          case 18: {
            if (fCtrl_ == null) {
              FCtrl = new global::TheThingsNetwork.API.LoRaWANProtocol.FCtrl();
            }
            input.ReadMessage(FCtrl);
            break;
          }
          case 24: {
            FCnt = input.ReadUInt32();
            break;
          }
          case 34: {
            fOpts_.AddEntriesFrom(input, _repeated_fOpts_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class FCtrl : pb::IMessage<FCtrl> {
    private static readonly pb::MessageParser<FCtrl> _parser = new pb::MessageParser<FCtrl>(() => new FCtrl());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FCtrl> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TheThingsNetwork.API.LoRaWANProtocol.LorawanReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FCtrl() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FCtrl(FCtrl other) : this() {
      adr_ = other.adr_;
      adrAckReq_ = other.adrAckReq_;
      ack_ = other.ack_;
      fPending_ = other.fPending_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FCtrl Clone() {
      return new FCtrl(this);
    }

    /// <summary>Field number for the "adr" field.</summary>
    public const int AdrFieldNumber = 1;
    private bool adr_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Adr {
      get { return adr_; }
      set {
        adr_ = value;
      }
    }

    /// <summary>Field number for the "adr_ack_req" field.</summary>
    public const int AdrAckReqFieldNumber = 2;
    private bool adrAckReq_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool AdrAckReq {
      get { return adrAckReq_; }
      set {
        adrAckReq_ = value;
      }
    }

    /// <summary>Field number for the "ack" field.</summary>
    public const int AckFieldNumber = 3;
    private bool ack_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Ack {
      get { return ack_; }
      set {
        ack_ = value;
      }
    }

    /// <summary>Field number for the "f_pending" field.</summary>
    public const int FPendingFieldNumber = 4;
    private bool fPending_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool FPending {
      get { return fPending_; }
      set {
        fPending_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FCtrl);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FCtrl other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Adr != other.Adr) return false;
      if (AdrAckReq != other.AdrAckReq) return false;
      if (Ack != other.Ack) return false;
      if (FPending != other.FPending) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Adr != false) hash ^= Adr.GetHashCode();
      if (AdrAckReq != false) hash ^= AdrAckReq.GetHashCode();
      if (Ack != false) hash ^= Ack.GetHashCode();
      if (FPending != false) hash ^= FPending.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Adr != false) {
        output.WriteRawTag(8);
        output.WriteBool(Adr);
      }
      if (AdrAckReq != false) {
        output.WriteRawTag(16);
        output.WriteBool(AdrAckReq);
      }
      if (Ack != false) {
        output.WriteRawTag(24);
        output.WriteBool(Ack);
      }
      if (FPending != false) {
        output.WriteRawTag(32);
        output.WriteBool(FPending);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Adr != false) {
        size += 1 + 1;
      }
      if (AdrAckReq != false) {
        size += 1 + 1;
      }
      if (Ack != false) {
        size += 1 + 1;
      }
      if (FPending != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FCtrl other) {
      if (other == null) {
        return;
      }
      if (other.Adr != false) {
        Adr = other.Adr;
      }
      if (other.AdrAckReq != false) {
        AdrAckReq = other.AdrAckReq;
      }
      if (other.Ack != false) {
        Ack = other.Ack;
      }
      if (other.FPending != false) {
        FPending = other.FPending;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Adr = input.ReadBool();
            break;
          }
          case 16: {
            AdrAckReq = input.ReadBool();
            break;
          }
          case 24: {
            Ack = input.ReadBool();
            break;
          }
          case 32: {
            FPending = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class MACCommand : pb::IMessage<MACCommand> {
    private static readonly pb::MessageParser<MACCommand> _parser = new pb::MessageParser<MACCommand>(() => new MACCommand());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MACCommand> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TheThingsNetwork.API.LoRaWANProtocol.LorawanReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MACCommand() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MACCommand(MACCommand other) : this() {
      cid_ = other.cid_;
      payload_ = other.payload_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MACCommand Clone() {
      return new MACCommand(this);
    }

    /// <summary>Field number for the "cid" field.</summary>
    public const int CidFieldNumber = 1;
    private uint cid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Cid {
      get { return cid_; }
      set {
        cid_ = value;
      }
    }

    /// <summary>Field number for the "payload" field.</summary>
    public const int PayloadFieldNumber = 2;
    private pb::ByteString payload_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Payload {
      get { return payload_; }
      set {
        payload_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MACCommand);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MACCommand other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Cid != other.Cid) return false;
      if (Payload != other.Payload) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Cid != 0) hash ^= Cid.GetHashCode();
      if (Payload.Length != 0) hash ^= Payload.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Cid != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Cid);
      }
      if (Payload.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Payload);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Cid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Cid);
      }
      if (Payload.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Payload);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MACCommand other) {
      if (other == null) {
        return;
      }
      if (other.Cid != 0) {
        Cid = other.Cid;
      }
      if (other.Payload.Length != 0) {
        Payload = other.Payload;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Cid = input.ReadUInt32();
            break;
          }
          case 18: {
            Payload = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class JoinRequestPayload : pb::IMessage<JoinRequestPayload> {
    private static readonly pb::MessageParser<JoinRequestPayload> _parser = new pb::MessageParser<JoinRequestPayload>(() => new JoinRequestPayload());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<JoinRequestPayload> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TheThingsNetwork.API.LoRaWANProtocol.LorawanReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinRequestPayload() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinRequestPayload(JoinRequestPayload other) : this() {
      appEui_ = other.appEui_;
      devEui_ = other.devEui_;
      devNonce_ = other.devNonce_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinRequestPayload Clone() {
      return new JoinRequestPayload(this);
    }

    /// <summary>Field number for the "app_eui" field.</summary>
    public const int AppEuiFieldNumber = 1;
    private pb::ByteString appEui_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString AppEui {
      get { return appEui_; }
      set {
        appEui_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "dev_eui" field.</summary>
    public const int DevEuiFieldNumber = 2;
    private pb::ByteString devEui_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString DevEui {
      get { return devEui_; }
      set {
        devEui_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "dev_nonce" field.</summary>
    public const int DevNonceFieldNumber = 3;
    private pb::ByteString devNonce_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString DevNonce {
      get { return devNonce_; }
      set {
        devNonce_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as JoinRequestPayload);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(JoinRequestPayload other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AppEui != other.AppEui) return false;
      if (DevEui != other.DevEui) return false;
      if (DevNonce != other.DevNonce) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AppEui.Length != 0) hash ^= AppEui.GetHashCode();
      if (DevEui.Length != 0) hash ^= DevEui.GetHashCode();
      if (DevNonce.Length != 0) hash ^= DevNonce.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AppEui.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(AppEui);
      }
      if (DevEui.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(DevEui);
      }
      if (DevNonce.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(DevNonce);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AppEui.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(AppEui);
      }
      if (DevEui.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(DevEui);
      }
      if (DevNonce.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(DevNonce);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(JoinRequestPayload other) {
      if (other == null) {
        return;
      }
      if (other.AppEui.Length != 0) {
        AppEui = other.AppEui;
      }
      if (other.DevEui.Length != 0) {
        DevEui = other.DevEui;
      }
      if (other.DevNonce.Length != 0) {
        DevNonce = other.DevNonce;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AppEui = input.ReadBytes();
            break;
          }
          case 18: {
            DevEui = input.ReadBytes();
            break;
          }
          case 26: {
            DevNonce = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class JoinAcceptPayload : pb::IMessage<JoinAcceptPayload> {
    private static readonly pb::MessageParser<JoinAcceptPayload> _parser = new pb::MessageParser<JoinAcceptPayload>(() => new JoinAcceptPayload());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<JoinAcceptPayload> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TheThingsNetwork.API.LoRaWANProtocol.LorawanReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinAcceptPayload() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinAcceptPayload(JoinAcceptPayload other) : this() {
      encrypted_ = other.encrypted_;
      appNonce_ = other.appNonce_;
      netId_ = other.netId_;
      devAddr_ = other.devAddr_;
      dlSettings_ = other.dlSettings_ != null ? other.dlSettings_.Clone() : null;
      rxDelay_ = other.rxDelay_;
      cfList_ = other.cfList_ != null ? other.cfList_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinAcceptPayload Clone() {
      return new JoinAcceptPayload(this);
    }

    /// <summary>Field number for the "encrypted" field.</summary>
    public const int EncryptedFieldNumber = 1;
    private pb::ByteString encrypted_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Encrypted {
      get { return encrypted_; }
      set {
        encrypted_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "app_nonce" field.</summary>
    public const int AppNonceFieldNumber = 2;
    private pb::ByteString appNonce_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString AppNonce {
      get { return appNonce_; }
      set {
        appNonce_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "net_id" field.</summary>
    public const int NetIdFieldNumber = 3;
    private pb::ByteString netId_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString NetId {
      get { return netId_; }
      set {
        netId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "dev_addr" field.</summary>
    public const int DevAddrFieldNumber = 4;
    private pb::ByteString devAddr_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString DevAddr {
      get { return devAddr_; }
      set {
        devAddr_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "dl_settings" field.</summary>
    public const int DlSettingsFieldNumber = 5;
    private global::TheThingsNetwork.API.LoRaWANProtocol.DLSettings dlSettings_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TheThingsNetwork.API.LoRaWANProtocol.DLSettings DlSettings {
      get { return dlSettings_; }
      set {
        dlSettings_ = value;
      }
    }

    /// <summary>Field number for the "rx_delay" field.</summary>
    public const int RxDelayFieldNumber = 6;
    private uint rxDelay_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint RxDelay {
      get { return rxDelay_; }
      set {
        rxDelay_ = value;
      }
    }

    /// <summary>Field number for the "cf_list" field.</summary>
    public const int CfListFieldNumber = 7;
    private global::TheThingsNetwork.API.LoRaWANProtocol.CFList cfList_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TheThingsNetwork.API.LoRaWANProtocol.CFList CfList {
      get { return cfList_; }
      set {
        cfList_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as JoinAcceptPayload);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(JoinAcceptPayload other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Encrypted != other.Encrypted) return false;
      if (AppNonce != other.AppNonce) return false;
      if (NetId != other.NetId) return false;
      if (DevAddr != other.DevAddr) return false;
      if (!object.Equals(DlSettings, other.DlSettings)) return false;
      if (RxDelay != other.RxDelay) return false;
      if (!object.Equals(CfList, other.CfList)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Encrypted.Length != 0) hash ^= Encrypted.GetHashCode();
      if (AppNonce.Length != 0) hash ^= AppNonce.GetHashCode();
      if (NetId.Length != 0) hash ^= NetId.GetHashCode();
      if (DevAddr.Length != 0) hash ^= DevAddr.GetHashCode();
      if (dlSettings_ != null) hash ^= DlSettings.GetHashCode();
      if (RxDelay != 0) hash ^= RxDelay.GetHashCode();
      if (cfList_ != null) hash ^= CfList.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Encrypted.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Encrypted);
      }
      if (AppNonce.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(AppNonce);
      }
      if (NetId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(NetId);
      }
      if (DevAddr.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(DevAddr);
      }
      if (dlSettings_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(DlSettings);
      }
      if (RxDelay != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(RxDelay);
      }
      if (cfList_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(CfList);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Encrypted.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Encrypted);
      }
      if (AppNonce.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(AppNonce);
      }
      if (NetId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(NetId);
      }
      if (DevAddr.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(DevAddr);
      }
      if (dlSettings_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DlSettings);
      }
      if (RxDelay != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RxDelay);
      }
      if (cfList_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CfList);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(JoinAcceptPayload other) {
      if (other == null) {
        return;
      }
      if (other.Encrypted.Length != 0) {
        Encrypted = other.Encrypted;
      }
      if (other.AppNonce.Length != 0) {
        AppNonce = other.AppNonce;
      }
      if (other.NetId.Length != 0) {
        NetId = other.NetId;
      }
      if (other.DevAddr.Length != 0) {
        DevAddr = other.DevAddr;
      }
      if (other.dlSettings_ != null) {
        if (dlSettings_ == null) {
          DlSettings = new global::TheThingsNetwork.API.LoRaWANProtocol.DLSettings();
        }
        DlSettings.MergeFrom(other.DlSettings);
      }
      if (other.RxDelay != 0) {
        RxDelay = other.RxDelay;
      }
      if (other.cfList_ != null) {
        if (cfList_ == null) {
          CfList = new global::TheThingsNetwork.API.LoRaWANProtocol.CFList();
        }
        CfList.MergeFrom(other.CfList);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Encrypted = input.ReadBytes();
            break;
          }
          case 18: {
            AppNonce = input.ReadBytes();
            break;
          }
          case 26: {
            NetId = input.ReadBytes();
            break;
          }
          case 34: {
            DevAddr = input.ReadBytes();
            break;
          }
          case 42: {
            if (dlSettings_ == null) {
              DlSettings = new global::TheThingsNetwork.API.LoRaWANProtocol.DLSettings();
            }
            input.ReadMessage(DlSettings);
            break;
          }
          case 48: {
            RxDelay = input.ReadUInt32();
            break;
          }
          case 58: {
            if (cfList_ == null) {
              CfList = new global::TheThingsNetwork.API.LoRaWANProtocol.CFList();
            }
            input.ReadMessage(CfList);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DLSettings : pb::IMessage<DLSettings> {
    private static readonly pb::MessageParser<DLSettings> _parser = new pb::MessageParser<DLSettings>(() => new DLSettings());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DLSettings> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TheThingsNetwork.API.LoRaWANProtocol.LorawanReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DLSettings() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DLSettings(DLSettings other) : this() {
      rx1DrOffset_ = other.rx1DrOffset_;
      rx2Dr_ = other.rx2Dr_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DLSettings Clone() {
      return new DLSettings(this);
    }

    /// <summary>Field number for the "rx1_dr_offset" field.</summary>
    public const int Rx1DrOffsetFieldNumber = 1;
    private uint rx1DrOffset_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Rx1DrOffset {
      get { return rx1DrOffset_; }
      set {
        rx1DrOffset_ = value;
      }
    }

    /// <summary>Field number for the "rx2_dr" field.</summary>
    public const int Rx2DrFieldNumber = 2;
    private uint rx2Dr_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Rx2Dr {
      get { return rx2Dr_; }
      set {
        rx2Dr_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DLSettings);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DLSettings other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Rx1DrOffset != other.Rx1DrOffset) return false;
      if (Rx2Dr != other.Rx2Dr) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Rx1DrOffset != 0) hash ^= Rx1DrOffset.GetHashCode();
      if (Rx2Dr != 0) hash ^= Rx2Dr.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Rx1DrOffset != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Rx1DrOffset);
      }
      if (Rx2Dr != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Rx2Dr);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Rx1DrOffset != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Rx1DrOffset);
      }
      if (Rx2Dr != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Rx2Dr);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DLSettings other) {
      if (other == null) {
        return;
      }
      if (other.Rx1DrOffset != 0) {
        Rx1DrOffset = other.Rx1DrOffset;
      }
      if (other.Rx2Dr != 0) {
        Rx2Dr = other.Rx2Dr;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Rx1DrOffset = input.ReadUInt32();
            break;
          }
          case 16: {
            Rx2Dr = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CFList : pb::IMessage<CFList> {
    private static readonly pb::MessageParser<CFList> _parser = new pb::MessageParser<CFList>(() => new CFList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CFList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TheThingsNetwork.API.LoRaWANProtocol.LorawanReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CFList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CFList(CFList other) : this() {
      freq_ = other.freq_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CFList Clone() {
      return new CFList(this);
    }

    /// <summary>Field number for the "freq" field.</summary>
    public const int FreqFieldNumber = 1;
    private static readonly pb::FieldCodec<uint> _repeated_freq_codec
        = pb::FieldCodec.ForUInt32(10);
    private readonly pbc::RepeatedField<uint> freq_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<uint> Freq {
      get { return freq_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CFList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CFList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!freq_.Equals(other.freq_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= freq_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      freq_.WriteTo(output, _repeated_freq_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += freq_.CalculateSize(_repeated_freq_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CFList other) {
      if (other == null) {
        return;
      }
      freq_.Add(other.freq_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            freq_.AddEntriesFrom(input, _repeated_freq_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
