// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: github.com/TheThingsNetwork/api/api.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace TheThingsNetwork.API {

  /// <summary>Holder for reflection information generated from github.com/TheThingsNetwork/api/api.proto</summary>
  public static partial class ApiReflection {

    #region Descriptor
    /// <summary>File descriptor for github.com/TheThingsNetwork/api/api.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ApiReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CilnaXRodWIuY29tL1RoZVRoaW5nc05ldHdvcmsvYXBpL2FwaS5wcm90bxID",
            "YXBpItEBCgtQZXJjZW50aWxlcxITCgtwZXJjZW50aWxlMRgBIAEoAhITCgtw",
            "ZXJjZW50aWxlNRgCIAEoAhIUCgxwZXJjZW50aWxlMTAYAyABKAISFAoMcGVy",
            "Y2VudGlsZTI1GAQgASgCEhQKDHBlcmNlbnRpbGU1MBgFIAEoAhIUCgxwZXJj",
            "ZW50aWxlNzUYBiABKAISFAoMcGVyY2VudGlsZTkwGAcgASgCEhQKDHBlcmNl",
            "bnRpbGU5NRgIIAEoAhIUCgxwZXJjZW50aWxlOTkYCSABKAIiNQoFUmF0ZXMS",
            "DQoFcmF0ZTEYASABKAISDQoFcmF0ZTUYAiABKAISDgoGcmF0ZTE1GAMgASgC",
            "ItMCCgtTeXN0ZW1TdGF0cxIoCgRsb2FkGAEgASgLMhouYXBpLlN5c3RlbVN0",
            "YXRzLkxvYWRzdGF0cxImCgNjcHUYAiABKAsyGS5hcGkuU3lzdGVtU3RhdHMu",
            "Q1BVU3RhdHMSLAoGbWVtb3J5GAMgASgLMhwuYXBpLlN5c3RlbVN0YXRzLk1l",
            "bW9yeVN0YXRzGjkKCUxvYWRzdGF0cxINCgVsb2FkMRgBIAEoAhINCgVsb2Fk",
            "NRgCIAEoAhIOCgZsb2FkMTUYAyABKAIaSgoIQ1BVU3RhdHMSDAoEdXNlchgB",
            "IAEoAhIOCgZzeXN0ZW0YAiABKAISDAoEaWRsZRgDIAEoAhISCgpwZXJjZW50",
            "YWdlGAQgASgCGj0KC01lbW9yeVN0YXRzEg0KBXRvdGFsGAEgASgEEhEKCWF2",
            "YWlsYWJsZRgCIAEoBBIMCgR1c2VkGAMgASgEIr8CCg5Db21wb25lbnRTdGF0",
            "cxIOCgZ1cHRpbWUYASABKAQSKQoDY3B1GAIgASgLMhwuYXBpLkNvbXBvbmVu",
            "dFN0YXRzLkNQVVN0YXRzEi8KBm1lbW9yeRgDIAEoCzIfLmFwaS5Db21wb25l",
            "bnRTdGF0cy5NZW1vcnlTdGF0cxISCgpnb3JvdXRpbmVzGAQgASgEEhcKD2dj",
            "X2NwdV9mcmFjdGlvbhgFIAEoAhpKCghDUFVTdGF0cxIMCgR1c2VyGAEgASgC",
            "Eg4KBnN5c3RlbRgCIAEoAhIMCgRpZGxlGAMgASgCEhIKCnBlcmNlbnRhZ2UY",
            "BCABKAIaSAoLTWVtb3J5U3RhdHMSDgoGbWVtb3J5GAEgASgEEgwKBHN3YXAY",
            "AiABKAQSDAoEaGVhcBgKIAEoBBINCgVzdGFjaxgLIAEoBEJeChhvcmcudGhl",
            "dGhpbmdzbmV0d29yay5hcGlCCEFQSVByb3RvUAFaH2dpdGh1Yi5jb20vVGhl",
            "VGhpbmdzTmV0d29yay9hcGmqAhRUaGVUaGluZ3NOZXR3b3JrLkFQSWIGcHJv",
            "dG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::TheThingsNetwork.API.Percentiles), global::TheThingsNetwork.API.Percentiles.Parser, new[]{ "Percentile1", "Percentile5", "Percentile10", "Percentile25", "Percentile50", "Percentile75", "Percentile90", "Percentile95", "Percentile99" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TheThingsNetwork.API.Rates), global::TheThingsNetwork.API.Rates.Parser, new[]{ "Rate1", "Rate5", "Rate15" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TheThingsNetwork.API.SystemStats), global::TheThingsNetwork.API.SystemStats.Parser, new[]{ "Load", "Cpu", "Memory" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::TheThingsNetwork.API.SystemStats.Types.Loadstats), global::TheThingsNetwork.API.SystemStats.Types.Loadstats.Parser, new[]{ "Load1", "Load5", "Load15" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TheThingsNetwork.API.SystemStats.Types.CPUStats), global::TheThingsNetwork.API.SystemStats.Types.CPUStats.Parser, new[]{ "User", "System", "Idle", "Percentage" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TheThingsNetwork.API.SystemStats.Types.MemoryStats), global::TheThingsNetwork.API.SystemStats.Types.MemoryStats.Parser, new[]{ "Total", "Available", "Used" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::TheThingsNetwork.API.ComponentStats), global::TheThingsNetwork.API.ComponentStats.Parser, new[]{ "Uptime", "Cpu", "Memory", "Goroutines", "GcCpuFraction" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::TheThingsNetwork.API.ComponentStats.Types.CPUStats), global::TheThingsNetwork.API.ComponentStats.Types.CPUStats.Parser, new[]{ "User", "System", "Idle", "Percentage" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TheThingsNetwork.API.ComponentStats.Types.MemoryStats), global::TheThingsNetwork.API.ComponentStats.Types.MemoryStats.Parser, new[]{ "Memory", "Swap", "Heap", "Stack" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Percentiles : pb::IMessage<Percentiles> {
    private static readonly pb::MessageParser<Percentiles> _parser = new pb::MessageParser<Percentiles>(() => new Percentiles());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Percentiles> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TheThingsNetwork.API.ApiReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Percentiles() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Percentiles(Percentiles other) : this() {
      percentile1_ = other.percentile1_;
      percentile5_ = other.percentile5_;
      percentile10_ = other.percentile10_;
      percentile25_ = other.percentile25_;
      percentile50_ = other.percentile50_;
      percentile75_ = other.percentile75_;
      percentile90_ = other.percentile90_;
      percentile95_ = other.percentile95_;
      percentile99_ = other.percentile99_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Percentiles Clone() {
      return new Percentiles(this);
    }

    /// <summary>Field number for the "percentile1" field.</summary>
    public const int Percentile1FieldNumber = 1;
    private float percentile1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Percentile1 {
      get { return percentile1_; }
      set {
        percentile1_ = value;
      }
    }

    /// <summary>Field number for the "percentile5" field.</summary>
    public const int Percentile5FieldNumber = 2;
    private float percentile5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Percentile5 {
      get { return percentile5_; }
      set {
        percentile5_ = value;
      }
    }

    /// <summary>Field number for the "percentile10" field.</summary>
    public const int Percentile10FieldNumber = 3;
    private float percentile10_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Percentile10 {
      get { return percentile10_; }
      set {
        percentile10_ = value;
      }
    }

    /// <summary>Field number for the "percentile25" field.</summary>
    public const int Percentile25FieldNumber = 4;
    private float percentile25_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Percentile25 {
      get { return percentile25_; }
      set {
        percentile25_ = value;
      }
    }

    /// <summary>Field number for the "percentile50" field.</summary>
    public const int Percentile50FieldNumber = 5;
    private float percentile50_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Percentile50 {
      get { return percentile50_; }
      set {
        percentile50_ = value;
      }
    }

    /// <summary>Field number for the "percentile75" field.</summary>
    public const int Percentile75FieldNumber = 6;
    private float percentile75_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Percentile75 {
      get { return percentile75_; }
      set {
        percentile75_ = value;
      }
    }

    /// <summary>Field number for the "percentile90" field.</summary>
    public const int Percentile90FieldNumber = 7;
    private float percentile90_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Percentile90 {
      get { return percentile90_; }
      set {
        percentile90_ = value;
      }
    }

    /// <summary>Field number for the "percentile95" field.</summary>
    public const int Percentile95FieldNumber = 8;
    private float percentile95_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Percentile95 {
      get { return percentile95_; }
      set {
        percentile95_ = value;
      }
    }

    /// <summary>Field number for the "percentile99" field.</summary>
    public const int Percentile99FieldNumber = 9;
    private float percentile99_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Percentile99 {
      get { return percentile99_; }
      set {
        percentile99_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Percentiles);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Percentiles other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Percentile1, other.Percentile1)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Percentile5, other.Percentile5)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Percentile10, other.Percentile10)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Percentile25, other.Percentile25)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Percentile50, other.Percentile50)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Percentile75, other.Percentile75)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Percentile90, other.Percentile90)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Percentile95, other.Percentile95)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Percentile99, other.Percentile99)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Percentile1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Percentile1);
      if (Percentile5 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Percentile5);
      if (Percentile10 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Percentile10);
      if (Percentile25 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Percentile25);
      if (Percentile50 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Percentile50);
      if (Percentile75 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Percentile75);
      if (Percentile90 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Percentile90);
      if (Percentile95 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Percentile95);
      if (Percentile99 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Percentile99);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Percentile1 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Percentile1);
      }
      if (Percentile5 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Percentile5);
      }
      if (Percentile10 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Percentile10);
      }
      if (Percentile25 != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Percentile25);
      }
      if (Percentile50 != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Percentile50);
      }
      if (Percentile75 != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(Percentile75);
      }
      if (Percentile90 != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(Percentile90);
      }
      if (Percentile95 != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(Percentile95);
      }
      if (Percentile99 != 0F) {
        output.WriteRawTag(77);
        output.WriteFloat(Percentile99);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Percentile1 != 0F) {
        size += 1 + 4;
      }
      if (Percentile5 != 0F) {
        size += 1 + 4;
      }
      if (Percentile10 != 0F) {
        size += 1 + 4;
      }
      if (Percentile25 != 0F) {
        size += 1 + 4;
      }
      if (Percentile50 != 0F) {
        size += 1 + 4;
      }
      if (Percentile75 != 0F) {
        size += 1 + 4;
      }
      if (Percentile90 != 0F) {
        size += 1 + 4;
      }
      if (Percentile95 != 0F) {
        size += 1 + 4;
      }
      if (Percentile99 != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Percentiles other) {
      if (other == null) {
        return;
      }
      if (other.Percentile1 != 0F) {
        Percentile1 = other.Percentile1;
      }
      if (other.Percentile5 != 0F) {
        Percentile5 = other.Percentile5;
      }
      if (other.Percentile10 != 0F) {
        Percentile10 = other.Percentile10;
      }
      if (other.Percentile25 != 0F) {
        Percentile25 = other.Percentile25;
      }
      if (other.Percentile50 != 0F) {
        Percentile50 = other.Percentile50;
      }
      if (other.Percentile75 != 0F) {
        Percentile75 = other.Percentile75;
      }
      if (other.Percentile90 != 0F) {
        Percentile90 = other.Percentile90;
      }
      if (other.Percentile95 != 0F) {
        Percentile95 = other.Percentile95;
      }
      if (other.Percentile99 != 0F) {
        Percentile99 = other.Percentile99;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Percentile1 = input.ReadFloat();
            break;
          }
          case 21: {
            Percentile5 = input.ReadFloat();
            break;
          }
          case 29: {
            Percentile10 = input.ReadFloat();
            break;
          }
          case 37: {
            Percentile25 = input.ReadFloat();
            break;
          }
          case 45: {
            Percentile50 = input.ReadFloat();
            break;
          }
          case 53: {
            Percentile75 = input.ReadFloat();
            break;
          }
          case 61: {
            Percentile90 = input.ReadFloat();
            break;
          }
          case 69: {
            Percentile95 = input.ReadFloat();
            break;
          }
          case 77: {
            Percentile99 = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Rates : pb::IMessage<Rates> {
    private static readonly pb::MessageParser<Rates> _parser = new pb::MessageParser<Rates>(() => new Rates());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Rates> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TheThingsNetwork.API.ApiReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Rates() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Rates(Rates other) : this() {
      rate1_ = other.rate1_;
      rate5_ = other.rate5_;
      rate15_ = other.rate15_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Rates Clone() {
      return new Rates(this);
    }

    /// <summary>Field number for the "rate1" field.</summary>
    public const int Rate1FieldNumber = 1;
    private float rate1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Rate1 {
      get { return rate1_; }
      set {
        rate1_ = value;
      }
    }

    /// <summary>Field number for the "rate5" field.</summary>
    public const int Rate5FieldNumber = 2;
    private float rate5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Rate5 {
      get { return rate5_; }
      set {
        rate5_ = value;
      }
    }

    /// <summary>Field number for the "rate15" field.</summary>
    public const int Rate15FieldNumber = 3;
    private float rate15_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Rate15 {
      get { return rate15_; }
      set {
        rate15_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Rates);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Rates other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Rate1, other.Rate1)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Rate5, other.Rate5)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Rate15, other.Rate15)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Rate1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Rate1);
      if (Rate5 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Rate5);
      if (Rate15 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Rate15);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Rate1 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Rate1);
      }
      if (Rate5 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Rate5);
      }
      if (Rate15 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Rate15);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Rate1 != 0F) {
        size += 1 + 4;
      }
      if (Rate5 != 0F) {
        size += 1 + 4;
      }
      if (Rate15 != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Rates other) {
      if (other == null) {
        return;
      }
      if (other.Rate1 != 0F) {
        Rate1 = other.Rate1;
      }
      if (other.Rate5 != 0F) {
        Rate5 = other.Rate5;
      }
      if (other.Rate15 != 0F) {
        Rate15 = other.Rate15;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Rate1 = input.ReadFloat();
            break;
          }
          case 21: {
            Rate5 = input.ReadFloat();
            break;
          }
          case 29: {
            Rate15 = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SystemStats : pb::IMessage<SystemStats> {
    private static readonly pb::MessageParser<SystemStats> _parser = new pb::MessageParser<SystemStats>(() => new SystemStats());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SystemStats> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TheThingsNetwork.API.ApiReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SystemStats() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SystemStats(SystemStats other) : this() {
      load_ = other.load_ != null ? other.load_.Clone() : null;
      cpu_ = other.cpu_ != null ? other.cpu_.Clone() : null;
      memory_ = other.memory_ != null ? other.memory_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SystemStats Clone() {
      return new SystemStats(this);
    }

    /// <summary>Field number for the "load" field.</summary>
    public const int LoadFieldNumber = 1;
    private global::TheThingsNetwork.API.SystemStats.Types.Loadstats load_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TheThingsNetwork.API.SystemStats.Types.Loadstats Load {
      get { return load_; }
      set {
        load_ = value;
      }
    }

    /// <summary>Field number for the "cpu" field.</summary>
    public const int CpuFieldNumber = 2;
    private global::TheThingsNetwork.API.SystemStats.Types.CPUStats cpu_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TheThingsNetwork.API.SystemStats.Types.CPUStats Cpu {
      get { return cpu_; }
      set {
        cpu_ = value;
      }
    }

    /// <summary>Field number for the "memory" field.</summary>
    public const int MemoryFieldNumber = 3;
    private global::TheThingsNetwork.API.SystemStats.Types.MemoryStats memory_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TheThingsNetwork.API.SystemStats.Types.MemoryStats Memory {
      get { return memory_; }
      set {
        memory_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SystemStats);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SystemStats other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Load, other.Load)) return false;
      if (!object.Equals(Cpu, other.Cpu)) return false;
      if (!object.Equals(Memory, other.Memory)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (load_ != null) hash ^= Load.GetHashCode();
      if (cpu_ != null) hash ^= Cpu.GetHashCode();
      if (memory_ != null) hash ^= Memory.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (load_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Load);
      }
      if (cpu_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Cpu);
      }
      if (memory_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Memory);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (load_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Load);
      }
      if (cpu_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Cpu);
      }
      if (memory_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Memory);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SystemStats other) {
      if (other == null) {
        return;
      }
      if (other.load_ != null) {
        if (load_ == null) {
          Load = new global::TheThingsNetwork.API.SystemStats.Types.Loadstats();
        }
        Load.MergeFrom(other.Load);
      }
      if (other.cpu_ != null) {
        if (cpu_ == null) {
          Cpu = new global::TheThingsNetwork.API.SystemStats.Types.CPUStats();
        }
        Cpu.MergeFrom(other.Cpu);
      }
      if (other.memory_ != null) {
        if (memory_ == null) {
          Memory = new global::TheThingsNetwork.API.SystemStats.Types.MemoryStats();
        }
        Memory.MergeFrom(other.Memory);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (load_ == null) {
              Load = new global::TheThingsNetwork.API.SystemStats.Types.Loadstats();
            }
            input.ReadMessage(Load);
            break;
          }
          case 18: {
            if (cpu_ == null) {
              Cpu = new global::TheThingsNetwork.API.SystemStats.Types.CPUStats();
            }
            input.ReadMessage(Cpu);
            break;
          }
          case 26: {
            if (memory_ == null) {
              Memory = new global::TheThingsNetwork.API.SystemStats.Types.MemoryStats();
            }
            input.ReadMessage(Memory);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the SystemStats message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Loadstats : pb::IMessage<Loadstats> {
        private static readonly pb::MessageParser<Loadstats> _parser = new pb::MessageParser<Loadstats>(() => new Loadstats());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Loadstats> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::TheThingsNetwork.API.SystemStats.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Loadstats() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Loadstats(Loadstats other) : this() {
          load1_ = other.load1_;
          load5_ = other.load5_;
          load15_ = other.load15_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Loadstats Clone() {
          return new Loadstats(this);
        }

        /// <summary>Field number for the "load1" field.</summary>
        public const int Load1FieldNumber = 1;
        private float load1_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public float Load1 {
          get { return load1_; }
          set {
            load1_ = value;
          }
        }

        /// <summary>Field number for the "load5" field.</summary>
        public const int Load5FieldNumber = 2;
        private float load5_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public float Load5 {
          get { return load5_; }
          set {
            load5_ = value;
          }
        }

        /// <summary>Field number for the "load15" field.</summary>
        public const int Load15FieldNumber = 3;
        private float load15_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public float Load15 {
          get { return load15_; }
          set {
            load15_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Loadstats);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Loadstats other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Load1, other.Load1)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Load5, other.Load5)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Load15, other.Load15)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Load1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Load1);
          if (Load5 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Load5);
          if (Load15 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Load15);
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Load1 != 0F) {
            output.WriteRawTag(13);
            output.WriteFloat(Load1);
          }
          if (Load5 != 0F) {
            output.WriteRawTag(21);
            output.WriteFloat(Load5);
          }
          if (Load15 != 0F) {
            output.WriteRawTag(29);
            output.WriteFloat(Load15);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Load1 != 0F) {
            size += 1 + 4;
          }
          if (Load5 != 0F) {
            size += 1 + 4;
          }
          if (Load15 != 0F) {
            size += 1 + 4;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Loadstats other) {
          if (other == null) {
            return;
          }
          if (other.Load1 != 0F) {
            Load1 = other.Load1;
          }
          if (other.Load5 != 0F) {
            Load5 = other.Load5;
          }
          if (other.Load15 != 0F) {
            Load15 = other.Load15;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 13: {
                Load1 = input.ReadFloat();
                break;
              }
              case 21: {
                Load5 = input.ReadFloat();
                break;
              }
              case 29: {
                Load15 = input.ReadFloat();
                break;
              }
            }
          }
        }

      }

      public sealed partial class CPUStats : pb::IMessage<CPUStats> {
        private static readonly pb::MessageParser<CPUStats> _parser = new pb::MessageParser<CPUStats>(() => new CPUStats());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<CPUStats> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::TheThingsNetwork.API.SystemStats.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CPUStats() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CPUStats(CPUStats other) : this() {
          user_ = other.user_;
          system_ = other.system_;
          idle_ = other.idle_;
          percentage_ = other.percentage_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CPUStats Clone() {
          return new CPUStats(this);
        }

        /// <summary>Field number for the "user" field.</summary>
        public const int UserFieldNumber = 1;
        private float user_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public float User {
          get { return user_; }
          set {
            user_ = value;
          }
        }

        /// <summary>Field number for the "system" field.</summary>
        public const int SystemFieldNumber = 2;
        private float system_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public float System {
          get { return system_; }
          set {
            system_ = value;
          }
        }

        /// <summary>Field number for the "idle" field.</summary>
        public const int IdleFieldNumber = 3;
        private float idle_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public float Idle {
          get { return idle_; }
          set {
            idle_ = value;
          }
        }

        /// <summary>Field number for the "percentage" field.</summary>
        public const int PercentageFieldNumber = 4;
        private float percentage_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public float Percentage {
          get { return percentage_; }
          set {
            percentage_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as CPUStats);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(CPUStats other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(User, other.User)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(System, other.System)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Idle, other.Idle)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Percentage, other.Percentage)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (User != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(User);
          if (System != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(System);
          if (Idle != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Idle);
          if (Percentage != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Percentage);
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (User != 0F) {
            output.WriteRawTag(13);
            output.WriteFloat(User);
          }
          if (System != 0F) {
            output.WriteRawTag(21);
            output.WriteFloat(System);
          }
          if (Idle != 0F) {
            output.WriteRawTag(29);
            output.WriteFloat(Idle);
          }
          if (Percentage != 0F) {
            output.WriteRawTag(37);
            output.WriteFloat(Percentage);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (User != 0F) {
            size += 1 + 4;
          }
          if (System != 0F) {
            size += 1 + 4;
          }
          if (Idle != 0F) {
            size += 1 + 4;
          }
          if (Percentage != 0F) {
            size += 1 + 4;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(CPUStats other) {
          if (other == null) {
            return;
          }
          if (other.User != 0F) {
            User = other.User;
          }
          if (other.System != 0F) {
            System = other.System;
          }
          if (other.Idle != 0F) {
            Idle = other.Idle;
          }
          if (other.Percentage != 0F) {
            Percentage = other.Percentage;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 13: {
                User = input.ReadFloat();
                break;
              }
              case 21: {
                System = input.ReadFloat();
                break;
              }
              case 29: {
                Idle = input.ReadFloat();
                break;
              }
              case 37: {
                Percentage = input.ReadFloat();
                break;
              }
            }
          }
        }

      }

      public sealed partial class MemoryStats : pb::IMessage<MemoryStats> {
        private static readonly pb::MessageParser<MemoryStats> _parser = new pb::MessageParser<MemoryStats>(() => new MemoryStats());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<MemoryStats> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::TheThingsNetwork.API.SystemStats.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MemoryStats() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MemoryStats(MemoryStats other) : this() {
          total_ = other.total_;
          available_ = other.available_;
          used_ = other.used_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MemoryStats Clone() {
          return new MemoryStats(this);
        }

        /// <summary>Field number for the "total" field.</summary>
        public const int TotalFieldNumber = 1;
        private ulong total_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong Total {
          get { return total_; }
          set {
            total_ = value;
          }
        }

        /// <summary>Field number for the "available" field.</summary>
        public const int AvailableFieldNumber = 2;
        private ulong available_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong Available {
          get { return available_; }
          set {
            available_ = value;
          }
        }

        /// <summary>Field number for the "used" field.</summary>
        public const int UsedFieldNumber = 3;
        private ulong used_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong Used {
          get { return used_; }
          set {
            used_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as MemoryStats);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(MemoryStats other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Total != other.Total) return false;
          if (Available != other.Available) return false;
          if (Used != other.Used) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Total != 0UL) hash ^= Total.GetHashCode();
          if (Available != 0UL) hash ^= Available.GetHashCode();
          if (Used != 0UL) hash ^= Used.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Total != 0UL) {
            output.WriteRawTag(8);
            output.WriteUInt64(Total);
          }
          if (Available != 0UL) {
            output.WriteRawTag(16);
            output.WriteUInt64(Available);
          }
          if (Used != 0UL) {
            output.WriteRawTag(24);
            output.WriteUInt64(Used);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Total != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Total);
          }
          if (Available != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Available);
          }
          if (Used != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Used);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(MemoryStats other) {
          if (other == null) {
            return;
          }
          if (other.Total != 0UL) {
            Total = other.Total;
          }
          if (other.Available != 0UL) {
            Available = other.Available;
          }
          if (other.Used != 0UL) {
            Used = other.Used;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Total = input.ReadUInt64();
                break;
              }
              case 16: {
                Available = input.ReadUInt64();
                break;
              }
              case 24: {
                Used = input.ReadUInt64();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class ComponentStats : pb::IMessage<ComponentStats> {
    private static readonly pb::MessageParser<ComponentStats> _parser = new pb::MessageParser<ComponentStats>(() => new ComponentStats());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ComponentStats> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TheThingsNetwork.API.ApiReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComponentStats() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComponentStats(ComponentStats other) : this() {
      uptime_ = other.uptime_;
      cpu_ = other.cpu_ != null ? other.cpu_.Clone() : null;
      memory_ = other.memory_ != null ? other.memory_.Clone() : null;
      goroutines_ = other.goroutines_;
      gcCpuFraction_ = other.gcCpuFraction_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComponentStats Clone() {
      return new ComponentStats(this);
    }

    /// <summary>Field number for the "uptime" field.</summary>
    public const int UptimeFieldNumber = 1;
    private ulong uptime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Uptime {
      get { return uptime_; }
      set {
        uptime_ = value;
      }
    }

    /// <summary>Field number for the "cpu" field.</summary>
    public const int CpuFieldNumber = 2;
    private global::TheThingsNetwork.API.ComponentStats.Types.CPUStats cpu_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TheThingsNetwork.API.ComponentStats.Types.CPUStats Cpu {
      get { return cpu_; }
      set {
        cpu_ = value;
      }
    }

    /// <summary>Field number for the "memory" field.</summary>
    public const int MemoryFieldNumber = 3;
    private global::TheThingsNetwork.API.ComponentStats.Types.MemoryStats memory_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TheThingsNetwork.API.ComponentStats.Types.MemoryStats Memory {
      get { return memory_; }
      set {
        memory_ = value;
      }
    }

    /// <summary>Field number for the "goroutines" field.</summary>
    public const int GoroutinesFieldNumber = 4;
    private ulong goroutines_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Goroutines {
      get { return goroutines_; }
      set {
        goroutines_ = value;
      }
    }

    /// <summary>Field number for the "gc_cpu_fraction" field.</summary>
    public const int GcCpuFractionFieldNumber = 5;
    private float gcCpuFraction_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float GcCpuFraction {
      get { return gcCpuFraction_; }
      set {
        gcCpuFraction_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ComponentStats);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ComponentStats other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uptime != other.Uptime) return false;
      if (!object.Equals(Cpu, other.Cpu)) return false;
      if (!object.Equals(Memory, other.Memory)) return false;
      if (Goroutines != other.Goroutines) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(GcCpuFraction, other.GcCpuFraction)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Uptime != 0UL) hash ^= Uptime.GetHashCode();
      if (cpu_ != null) hash ^= Cpu.GetHashCode();
      if (memory_ != null) hash ^= Memory.GetHashCode();
      if (Goroutines != 0UL) hash ^= Goroutines.GetHashCode();
      if (GcCpuFraction != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(GcCpuFraction);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Uptime != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Uptime);
      }
      if (cpu_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Cpu);
      }
      if (memory_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Memory);
      }
      if (Goroutines != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(Goroutines);
      }
      if (GcCpuFraction != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(GcCpuFraction);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Uptime != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Uptime);
      }
      if (cpu_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Cpu);
      }
      if (memory_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Memory);
      }
      if (Goroutines != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Goroutines);
      }
      if (GcCpuFraction != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ComponentStats other) {
      if (other == null) {
        return;
      }
      if (other.Uptime != 0UL) {
        Uptime = other.Uptime;
      }
      if (other.cpu_ != null) {
        if (cpu_ == null) {
          Cpu = new global::TheThingsNetwork.API.ComponentStats.Types.CPUStats();
        }
        Cpu.MergeFrom(other.Cpu);
      }
      if (other.memory_ != null) {
        if (memory_ == null) {
          Memory = new global::TheThingsNetwork.API.ComponentStats.Types.MemoryStats();
        }
        Memory.MergeFrom(other.Memory);
      }
      if (other.Goroutines != 0UL) {
        Goroutines = other.Goroutines;
      }
      if (other.GcCpuFraction != 0F) {
        GcCpuFraction = other.GcCpuFraction;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Uptime = input.ReadUInt64();
            break;
          }
          case 18: {
            if (cpu_ == null) {
              Cpu = new global::TheThingsNetwork.API.ComponentStats.Types.CPUStats();
            }
            input.ReadMessage(Cpu);
            break;
          }
          case 26: {
            if (memory_ == null) {
              Memory = new global::TheThingsNetwork.API.ComponentStats.Types.MemoryStats();
            }
            input.ReadMessage(Memory);
            break;
          }
          case 32: {
            Goroutines = input.ReadUInt64();
            break;
          }
          case 45: {
            GcCpuFraction = input.ReadFloat();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the ComponentStats message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class CPUStats : pb::IMessage<CPUStats> {
        private static readonly pb::MessageParser<CPUStats> _parser = new pb::MessageParser<CPUStats>(() => new CPUStats());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<CPUStats> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::TheThingsNetwork.API.ComponentStats.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CPUStats() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CPUStats(CPUStats other) : this() {
          user_ = other.user_;
          system_ = other.system_;
          idle_ = other.idle_;
          percentage_ = other.percentage_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CPUStats Clone() {
          return new CPUStats(this);
        }

        /// <summary>Field number for the "user" field.</summary>
        public const int UserFieldNumber = 1;
        private float user_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public float User {
          get { return user_; }
          set {
            user_ = value;
          }
        }

        /// <summary>Field number for the "system" field.</summary>
        public const int SystemFieldNumber = 2;
        private float system_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public float System {
          get { return system_; }
          set {
            system_ = value;
          }
        }

        /// <summary>Field number for the "idle" field.</summary>
        public const int IdleFieldNumber = 3;
        private float idle_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public float Idle {
          get { return idle_; }
          set {
            idle_ = value;
          }
        }

        /// <summary>Field number for the "percentage" field.</summary>
        public const int PercentageFieldNumber = 4;
        private float percentage_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public float Percentage {
          get { return percentage_; }
          set {
            percentage_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as CPUStats);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(CPUStats other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(User, other.User)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(System, other.System)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Idle, other.Idle)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Percentage, other.Percentage)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (User != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(User);
          if (System != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(System);
          if (Idle != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Idle);
          if (Percentage != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Percentage);
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (User != 0F) {
            output.WriteRawTag(13);
            output.WriteFloat(User);
          }
          if (System != 0F) {
            output.WriteRawTag(21);
            output.WriteFloat(System);
          }
          if (Idle != 0F) {
            output.WriteRawTag(29);
            output.WriteFloat(Idle);
          }
          if (Percentage != 0F) {
            output.WriteRawTag(37);
            output.WriteFloat(Percentage);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (User != 0F) {
            size += 1 + 4;
          }
          if (System != 0F) {
            size += 1 + 4;
          }
          if (Idle != 0F) {
            size += 1 + 4;
          }
          if (Percentage != 0F) {
            size += 1 + 4;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(CPUStats other) {
          if (other == null) {
            return;
          }
          if (other.User != 0F) {
            User = other.User;
          }
          if (other.System != 0F) {
            System = other.System;
          }
          if (other.Idle != 0F) {
            Idle = other.Idle;
          }
          if (other.Percentage != 0F) {
            Percentage = other.Percentage;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 13: {
                User = input.ReadFloat();
                break;
              }
              case 21: {
                System = input.ReadFloat();
                break;
              }
              case 29: {
                Idle = input.ReadFloat();
                break;
              }
              case 37: {
                Percentage = input.ReadFloat();
                break;
              }
            }
          }
        }

      }

      public sealed partial class MemoryStats : pb::IMessage<MemoryStats> {
        private static readonly pb::MessageParser<MemoryStats> _parser = new pb::MessageParser<MemoryStats>(() => new MemoryStats());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<MemoryStats> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::TheThingsNetwork.API.ComponentStats.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MemoryStats() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MemoryStats(MemoryStats other) : this() {
          memory_ = other.memory_;
          swap_ = other.swap_;
          heap_ = other.heap_;
          stack_ = other.stack_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MemoryStats Clone() {
          return new MemoryStats(this);
        }

        /// <summary>Field number for the "memory" field.</summary>
        public const int MemoryFieldNumber = 1;
        private ulong memory_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong Memory {
          get { return memory_; }
          set {
            memory_ = value;
          }
        }

        /// <summary>Field number for the "swap" field.</summary>
        public const int SwapFieldNumber = 2;
        private ulong swap_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong Swap {
          get { return swap_; }
          set {
            swap_ = value;
          }
        }

        /// <summary>Field number for the "heap" field.</summary>
        public const int HeapFieldNumber = 10;
        private ulong heap_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong Heap {
          get { return heap_; }
          set {
            heap_ = value;
          }
        }

        /// <summary>Field number for the "stack" field.</summary>
        public const int StackFieldNumber = 11;
        private ulong stack_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong Stack {
          get { return stack_; }
          set {
            stack_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as MemoryStats);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(MemoryStats other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Memory != other.Memory) return false;
          if (Swap != other.Swap) return false;
          if (Heap != other.Heap) return false;
          if (Stack != other.Stack) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Memory != 0UL) hash ^= Memory.GetHashCode();
          if (Swap != 0UL) hash ^= Swap.GetHashCode();
          if (Heap != 0UL) hash ^= Heap.GetHashCode();
          if (Stack != 0UL) hash ^= Stack.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Memory != 0UL) {
            output.WriteRawTag(8);
            output.WriteUInt64(Memory);
          }
          if (Swap != 0UL) {
            output.WriteRawTag(16);
            output.WriteUInt64(Swap);
          }
          if (Heap != 0UL) {
            output.WriteRawTag(80);
            output.WriteUInt64(Heap);
          }
          if (Stack != 0UL) {
            output.WriteRawTag(88);
            output.WriteUInt64(Stack);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Memory != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Memory);
          }
          if (Swap != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Swap);
          }
          if (Heap != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Heap);
          }
          if (Stack != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Stack);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(MemoryStats other) {
          if (other == null) {
            return;
          }
          if (other.Memory != 0UL) {
            Memory = other.Memory;
          }
          if (other.Swap != 0UL) {
            Swap = other.Swap;
          }
          if (other.Heap != 0UL) {
            Heap = other.Heap;
          }
          if (other.Stack != 0UL) {
            Stack = other.Stack;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Memory = input.ReadUInt64();
                break;
              }
              case 16: {
                Swap = input.ReadUInt64();
                break;
              }
              case 80: {
                Heap = input.ReadUInt64();
                break;
              }
              case 88: {
                Stack = input.ReadUInt64();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
