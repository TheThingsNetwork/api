// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: github.com/TheThingsNetwork/api/handler/handler.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace TheThingsNetwork.API.Handler {

  /// <summary>Holder for reflection information generated from github.com/TheThingsNetwork/api/handler/handler.proto</summary>
  public static partial class HandlerReflection {

    #region Descriptor
    /// <summary>File descriptor for github.com/TheThingsNetwork/api/handler/handler.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static HandlerReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjVnaXRodWIuY29tL1RoZVRoaW5nc05ldHdvcmsvYXBpL2hhbmRsZXIvaGFu",
            "ZGxlci5wcm90bxIHaGFuZGxlchobZ29vZ2xlL3Byb3RvYnVmL2VtcHR5LnBy",
            "b3RvGhxnb29nbGUvYXBpL2Fubm90YXRpb25zLnByb3RvGi1naXRodWIuY29t",
            "L2dvZ28vcHJvdG9idWYvZ29nb3Byb3RvL2dvZ28ucHJvdG8aKWdpdGh1Yi5j",
            "b20vVGhlVGhpbmdzTmV0d29yay9hcGkvYXBpLnByb3RvGjNnaXRodWIuY29t",
            "L1RoZVRoaW5nc05ldHdvcmsvYXBpL2Jyb2tlci9icm9rZXIucHJvdG8aN2dp",
            "dGh1Yi5jb20vVGhlVGhpbmdzTmV0d29yay9hcGkvcHJvdG9jb2wvcHJvdG9j",
            "b2wucHJvdG8aPWdpdGh1Yi5jb20vVGhlVGhpbmdzTmV0d29yay9hcGkvcHJv",
            "dG9jb2wvbG9yYXdhbi9kZXZpY2UucHJvdG8aMWdpdGh1Yi5jb20vVGhlVGhp",
            "bmdzTmV0d29yay9hcGkvdHJhY2UvdHJhY2UucHJvdG8i5AEKGERldmljZUFj",
            "dGl2YXRpb25SZXNwb25zZRIPCgdwYXlsb2FkGAEgASgMEiIKB21lc3NhZ2UY",
            "AiABKAsyES5wcm90b2NvbC5NZXNzYWdlEjUKD2Rvd25saW5rX29wdGlvbhgL",
            "IAEoCzIWLmJyb2tlci5Eb3dubGlua09wdGlvbkIEyN4fABI/ChNhY3RpdmF0",
            "aW9uX21ldGFkYXRhGBcgASgLMhwucHJvdG9jb2wuQWN0aXZhdGlvbk1ldGFk",
            "YXRhQgTI3h8AEhsKBXRyYWNlGB8gASgLMgwudHJhY2UuVHJhY2UiDwoNU3Rh",
            "dHVzUmVxdWVzdCK5AQoGU3RhdHVzEiYKBnN5c3RlbRgBIAEoCzIQLmFwaS5T",
            "eXN0ZW1TdGF0c0IEyN4fABIsCgljb21wb25lbnQYAiABKAsyEy5hcGkuQ29t",
            "cG9uZW50U3RhdHNCBMjeHwASGgoGdXBsaW5rGAsgASgLMgouYXBpLlJhdGVz",
            "EhwKCGRvd25saW5rGAwgASgLMgouYXBpLlJhdGVzEh8KC2FjdGl2YXRpb25z",
            "GA0gASgLMgouYXBpLlJhdGVzIjIKFUFwcGxpY2F0aW9uSWRlbnRpZmllchIZ",
            "CgZhcHBfaWQYASABKAlCCeLeHwVBcHBJRCKtAQoLQXBwbGljYXRpb24SGQoG",
            "YXBwX2lkGAEgASgJQgni3h8FQXBwSUQSFgoOcGF5bG9hZF9mb3JtYXQYBiAB",
            "KAkSDwoHZGVjb2RlchgCIAEoCRIRCgljb252ZXJ0ZXIYAyABKAkSEQoJdmFs",
            "aWRhdG9yGAQgASgJEg8KB2VuY29kZXIYBSABKAkSIwobcmVnaXN0ZXJfb25f",
            "am9pbl9hY2Nlc3Nfa2V5GAcgASgJIkgKEERldmljZUlkZW50aWZpZXISGQoG",
            "YXBwX2lkGAEgASgJQgni3h8FQXBwSUQSGQoGZGV2X2lkGAIgASgJQgni3h8F",
            "RGV2SUQiugIKBkRldmljZRIZCgZhcHBfaWQYASABKAlCCeLeHwVBcHBJRBIZ",
            "CgZkZXZfaWQYAiABKAlCCeLeHwVEZXZJRBI8Cg5sb3Jhd2FuX2RldmljZRgD",
            "IAEoCzIPLmxvcmF3YW4uRGV2aWNlQhHi3h8NTG9SYVdBTkRldmljZUgAEhAK",
            "CGxhdGl0dWRlGAogASgCEhEKCWxvbmdpdHVkZRgLIAEoAhIQCghhbHRpdHVk",
            "ZRgMIAEoBRIzCgphdHRyaWJ1dGVzGA0gAygLMh8uaGFuZGxlci5EZXZpY2Uu",
            "QXR0cmlidXRlc0VudHJ5EhMKC2Rlc2NyaXB0aW9uGBQgASgJGjEKD0F0dHJp",
            "YnV0ZXNFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgBQggK",
            "BmRldmljZSIuCgpEZXZpY2VMaXN0EiAKB2RldmljZXMYASADKAsyDy5oYW5k",
            "bGVyLkRldmljZSJsChJEcnlEb3dubGlua01lc3NhZ2USDwoHcGF5bG9hZBgB",
            "IAEoDBIOCgZmaWVsZHMYAiABKAkSJwoDYXBwGAMgASgLMhQuaGFuZGxlci5B",
            "cHBsaWNhdGlvbkIEyN4fABIMCgRwb3J0GAQgASgNIloKEERyeVVwbGlua01l",
            "c3NhZ2USDwoHcGF5bG9hZBgBIAEoDBInCgNhcHAYAiABKAsyFC5oYW5kbGVy",
            "LkFwcGxpY2F0aW9uQgTI3h8AEgwKBHBvcnQYAyABKA0ibQoWU2ltdWxhdGVk",
            "VXBsaW5rTWVzc2FnZRIZCgZhcHBfaWQYASABKAlCCeLeHwVBcHBJRBIZCgZk",
            "ZXZfaWQYAiABKAlCCeLeHwVEZXZJRBIPCgdwYXlsb2FkGAMgASgMEgwKBHBv",
            "cnQYBCABKA0iLAoITG9nRW50cnkSEAoIZnVuY3Rpb24YASABKAkSDgoGZmll",
            "bGRzGAIgAygJImIKD0RyeVVwbGlua1Jlc3VsdBIPCgdwYXlsb2FkGAEgASgM",
            "Eg4KBmZpZWxkcxgCIAEoCRINCgV2YWxpZBgDIAEoCBIfCgRsb2dzGAQgAygL",
            "MhEuaGFuZGxlci5Mb2dFbnRyeSJFChFEcnlEb3dubGlua1Jlc3VsdBIPCgdw",
            "YXlsb2FkGAEgASgMEh8KBGxvZ3MYAiADKAsyES5oYW5kbGVyLkxvZ0VudHJ5",
            "MsUBCgdIYW5kbGVyEl4KE0FjdGl2YXRpb25DaGFsbGVuZ2USIi5icm9rZXIu",
            "QWN0aXZhdGlvbkNoYWxsZW5nZVJlcXVlc3QaIy5icm9rZXIuQWN0aXZhdGlv",
            "bkNoYWxsZW5nZVJlc3BvbnNlEloKCEFjdGl2YXRlEisuYnJva2VyLkRlZHVw",
            "bGljYXRlZERldmljZUFjdGl2YXRpb25SZXF1ZXN0GiEuaGFuZGxlci5EZXZp",
            "Y2VBY3RpdmF0aW9uUmVzcG9uc2Uy4wkKEkFwcGxpY2F0aW9uTWFuYWdlchJn",
            "ChNSZWdpc3RlckFwcGxpY2F0aW9uEh4uaGFuZGxlci5BcHBsaWNhdGlvbklk",
            "ZW50aWZpZXIaFi5nb29nbGUucHJvdG9idWYuRW1wdHkiGILT5JMCEiINL2Fw",
            "cGxpY2F0aW9uczoBKhJmCg5HZXRBcHBsaWNhdGlvbhIeLmhhbmRsZXIuQXBw",
            "bGljYXRpb25JZGVudGlmaWVyGhQuaGFuZGxlci5BcHBsaWNhdGlvbiIegtPk",
            "kwIYEhYvYXBwbGljYXRpb25zL3thcHBfaWR9En4KDlNldEFwcGxpY2F0aW9u",
            "EhQuaGFuZGxlci5BcHBsaWNhdGlvbhoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0",
            "eSI+gtPkkwI4IhYvYXBwbGljYXRpb25zL3thcHBfaWR9OgEqWhsaFi9hcHBs",
            "aWNhdGlvbnMve2FwcF9pZH06ASoSawoRRGVsZXRlQXBwbGljYXRpb24SHi5o",
            "YW5kbGVyLkFwcGxpY2F0aW9uSWRlbnRpZmllchoWLmdvb2dsZS5wcm90b2J1",
            "Zi5FbXB0eSIegtPkkwIYKhYvYXBwbGljYXRpb25zL3thcHBfaWR9EmgKCUdl",
            "dERldmljZRIZLmhhbmRsZXIuRGV2aWNlSWRlbnRpZmllchoPLmhhbmRsZXIu",
            "RGV2aWNlIi+C0+STAikSJy9hcHBsaWNhdGlvbnMve2FwcF9pZH0vZGV2aWNl",
            "cy97ZGV2X2lkfRLiAQoJU2V0RGV2aWNlEg8uaGFuZGxlci5EZXZpY2UaFi5n",
            "b29nbGUucHJvdG9idWYuRW1wdHkiqwGC0+STAqQBIicvYXBwbGljYXRpb25z",
            "L3thcHBfaWR9L2RldmljZXMve2Rldl9pZH06ASpaLBonL2FwcGxpY2F0aW9u",
            "cy97YXBwX2lkfS9kZXZpY2VzL3tkZXZfaWR9OgEqWiMiHi9hcHBsaWNhdGlv",
            "bnMve2FwcF9pZH0vZGV2aWNlczoBKlojGh4vYXBwbGljYXRpb25zL3thcHBf",
            "aWR9L2RldmljZXM6ASoScgoMRGVsZXRlRGV2aWNlEhkuaGFuZGxlci5EZXZp",
            "Y2VJZGVudGlmaWVyGhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5Ii+C0+STAikq",
            "Jy9hcHBsaWNhdGlvbnMve2FwcF9pZH0vZGV2aWNlcy97ZGV2X2lkfRJ3ChhH",
            "ZXREZXZpY2VzRm9yQXBwbGljYXRpb24SHi5oYW5kbGVyLkFwcGxpY2F0aW9u",
            "SWRlbnRpZmllchoTLmhhbmRsZXIuRGV2aWNlTGlzdCImgtPkkwIgEh4vYXBw",
            "bGljYXRpb25zL3thcHBfaWR9L2RldmljZXMSRgoLRHJ5RG93bmxpbmsSGy5o",
            "YW5kbGVyLkRyeURvd25saW5rTWVzc2FnZRoaLmhhbmRsZXIuRHJ5RG93bmxp",
            "bmtSZXN1bHQSQAoJRHJ5VXBsaW5rEhkuaGFuZGxlci5EcnlVcGxpbmtNZXNz",
            "YWdlGhguaGFuZGxlci5EcnlVcGxpbmtSZXN1bHQSSQoOU2ltdWxhdGVVcGxp",
            "bmsSHy5oYW5kbGVyLlNpbXVsYXRlZFVwbGlua01lc3NhZ2UaFi5nb29nbGUu",
            "cHJvdG9idWYuRW1wdHkyRgoOSGFuZGxlck1hbmFnZXISNAoJR2V0U3RhdHVz",
            "EhYuaGFuZGxlci5TdGF0dXNSZXF1ZXN0Gg8uaGFuZGxlci5TdGF0dXNCegog",
            "b3JnLnRoZXRoaW5nc25ldHdvcmsuYXBpLmhhbmRsZXJCDEhhbmRsZXJQcm90",
            "b1ABWidnaXRodWIuY29tL1RoZVRoaW5nc05ldHdvcmsvYXBpL2hhbmRsZXKq",
            "AhxUaGVUaGluZ3NOZXR3b3JrLkFQSS5IYW5kbGVyYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, global::Google.Api.AnnotationsReflection.Descriptor, global::TheThingsNetwork.API.ApiReflection.Descriptor, global::TheThingsNetwork.API.Broker.BrokerReflection.Descriptor, global::TheThingsNetwork.API.Protocol.ProtocolReflection.Descriptor, global::TheThingsNetwork.API.LoRaWANProtocol.DeviceReflection.Descriptor, global::TheThingsNetwork.API.Trace.TraceReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::TheThingsNetwork.API.Handler.DeviceActivationResponse), global::TheThingsNetwork.API.Handler.DeviceActivationResponse.Parser, new[]{ "Payload", "Message", "DownlinkOption", "ActivationMetadata", "Trace" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TheThingsNetwork.API.Handler.StatusRequest), global::TheThingsNetwork.API.Handler.StatusRequest.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TheThingsNetwork.API.Handler.Status), global::TheThingsNetwork.API.Handler.Status.Parser, new[]{ "System", "Component", "Uplink", "Downlink", "Activations" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TheThingsNetwork.API.Handler.ApplicationIdentifier), global::TheThingsNetwork.API.Handler.ApplicationIdentifier.Parser, new[]{ "AppId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TheThingsNetwork.API.Handler.Application), global::TheThingsNetwork.API.Handler.Application.Parser, new[]{ "AppId", "PayloadFormat", "Decoder", "Converter", "Validator", "Encoder", "RegisterOnJoinAccessKey" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TheThingsNetwork.API.Handler.DeviceIdentifier), global::TheThingsNetwork.API.Handler.DeviceIdentifier.Parser, new[]{ "AppId", "DevId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TheThingsNetwork.API.Handler.Device), global::TheThingsNetwork.API.Handler.Device.Parser, new[]{ "AppId", "DevId", "LorawanDevice", "Latitude", "Longitude", "Altitude", "Attributes", "Description" }, new[]{ "Device" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::TheThingsNetwork.API.Handler.DeviceList), global::TheThingsNetwork.API.Handler.DeviceList.Parser, new[]{ "Devices" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TheThingsNetwork.API.Handler.DryDownlinkMessage), global::TheThingsNetwork.API.Handler.DryDownlinkMessage.Parser, new[]{ "Payload", "Fields", "App", "Port" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TheThingsNetwork.API.Handler.DryUplinkMessage), global::TheThingsNetwork.API.Handler.DryUplinkMessage.Parser, new[]{ "Payload", "App", "Port" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TheThingsNetwork.API.Handler.SimulatedUplinkMessage), global::TheThingsNetwork.API.Handler.SimulatedUplinkMessage.Parser, new[]{ "AppId", "DevId", "Payload", "Port" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TheThingsNetwork.API.Handler.LogEntry), global::TheThingsNetwork.API.Handler.LogEntry.Parser, new[]{ "Function", "Fields" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TheThingsNetwork.API.Handler.DryUplinkResult), global::TheThingsNetwork.API.Handler.DryUplinkResult.Parser, new[]{ "Payload", "Fields", "Valid", "Logs" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TheThingsNetwork.API.Handler.DryDownlinkResult), global::TheThingsNetwork.API.Handler.DryDownlinkResult.Parser, new[]{ "Payload", "Logs" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class DeviceActivationResponse : pb::IMessage<DeviceActivationResponse> {
    private static readonly pb::MessageParser<DeviceActivationResponse> _parser = new pb::MessageParser<DeviceActivationResponse>(() => new DeviceActivationResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeviceActivationResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TheThingsNetwork.API.Handler.HandlerReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceActivationResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceActivationResponse(DeviceActivationResponse other) : this() {
      payload_ = other.payload_;
      message_ = other.message_ != null ? other.message_.Clone() : null;
      downlinkOption_ = other.downlinkOption_ != null ? other.downlinkOption_.Clone() : null;
      activationMetadata_ = other.activationMetadata_ != null ? other.activationMetadata_.Clone() : null;
      trace_ = other.trace_ != null ? other.trace_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceActivationResponse Clone() {
      return new DeviceActivationResponse(this);
    }

    /// <summary>Field number for the "payload" field.</summary>
    public const int PayloadFieldNumber = 1;
    private pb::ByteString payload_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Payload {
      get { return payload_; }
      set {
        payload_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 2;
    private global::TheThingsNetwork.API.Protocol.Message message_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TheThingsNetwork.API.Protocol.Message Message {
      get { return message_; }
      set {
        message_ = value;
      }
    }

    /// <summary>Field number for the "downlink_option" field.</summary>
    public const int DownlinkOptionFieldNumber = 11;
    private global::TheThingsNetwork.API.Broker.DownlinkOption downlinkOption_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TheThingsNetwork.API.Broker.DownlinkOption DownlinkOption {
      get { return downlinkOption_; }
      set {
        downlinkOption_ = value;
      }
    }

    /// <summary>Field number for the "activation_metadata" field.</summary>
    public const int ActivationMetadataFieldNumber = 23;
    private global::TheThingsNetwork.API.Protocol.ActivationMetadata activationMetadata_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TheThingsNetwork.API.Protocol.ActivationMetadata ActivationMetadata {
      get { return activationMetadata_; }
      set {
        activationMetadata_ = value;
      }
    }

    /// <summary>Field number for the "trace" field.</summary>
    public const int TraceFieldNumber = 31;
    private global::TheThingsNetwork.API.Trace.Trace trace_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TheThingsNetwork.API.Trace.Trace Trace {
      get { return trace_; }
      set {
        trace_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeviceActivationResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeviceActivationResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Payload != other.Payload) return false;
      if (!object.Equals(Message, other.Message)) return false;
      if (!object.Equals(DownlinkOption, other.DownlinkOption)) return false;
      if (!object.Equals(ActivationMetadata, other.ActivationMetadata)) return false;
      if (!object.Equals(Trace, other.Trace)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Payload.Length != 0) hash ^= Payload.GetHashCode();
      if (message_ != null) hash ^= Message.GetHashCode();
      if (downlinkOption_ != null) hash ^= DownlinkOption.GetHashCode();
      if (activationMetadata_ != null) hash ^= ActivationMetadata.GetHashCode();
      if (trace_ != null) hash ^= Trace.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Payload.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Payload);
      }
      if (message_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Message);
      }
      if (downlinkOption_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(DownlinkOption);
      }
      if (activationMetadata_ != null) {
        output.WriteRawTag(186, 1);
        output.WriteMessage(ActivationMetadata);
      }
      if (trace_ != null) {
        output.WriteRawTag(250, 1);
        output.WriteMessage(Trace);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Payload.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Payload);
      }
      if (message_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Message);
      }
      if (downlinkOption_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DownlinkOption);
      }
      if (activationMetadata_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ActivationMetadata);
      }
      if (trace_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Trace);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeviceActivationResponse other) {
      if (other == null) {
        return;
      }
      if (other.Payload.Length != 0) {
        Payload = other.Payload;
      }
      if (other.message_ != null) {
        if (message_ == null) {
          Message = new global::TheThingsNetwork.API.Protocol.Message();
        }
        Message.MergeFrom(other.Message);
      }
      if (other.downlinkOption_ != null) {
        if (downlinkOption_ == null) {
          DownlinkOption = new global::TheThingsNetwork.API.Broker.DownlinkOption();
        }
        DownlinkOption.MergeFrom(other.DownlinkOption);
      }
      if (other.activationMetadata_ != null) {
        if (activationMetadata_ == null) {
          ActivationMetadata = new global::TheThingsNetwork.API.Protocol.ActivationMetadata();
        }
        ActivationMetadata.MergeFrom(other.ActivationMetadata);
      }
      if (other.trace_ != null) {
        if (trace_ == null) {
          Trace = new global::TheThingsNetwork.API.Trace.Trace();
        }
        Trace.MergeFrom(other.Trace);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Payload = input.ReadBytes();
            break;
          }
          case 18: {
            if (message_ == null) {
              Message = new global::TheThingsNetwork.API.Protocol.Message();
            }
            input.ReadMessage(Message);
            break;
          }
          case 90: {
            if (downlinkOption_ == null) {
              DownlinkOption = new global::TheThingsNetwork.API.Broker.DownlinkOption();
            }
            input.ReadMessage(DownlinkOption);
            break;
          }
          case 186: {
            if (activationMetadata_ == null) {
              ActivationMetadata = new global::TheThingsNetwork.API.Protocol.ActivationMetadata();
            }
            input.ReadMessage(ActivationMetadata);
            break;
          }
          case 250: {
            if (trace_ == null) {
              Trace = new global::TheThingsNetwork.API.Trace.Trace();
            }
            input.ReadMessage(Trace);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// message StatusRequest is used to request the status of this Handler
  /// </summary>
  public sealed partial class StatusRequest : pb::IMessage<StatusRequest> {
    private static readonly pb::MessageParser<StatusRequest> _parser = new pb::MessageParser<StatusRequest>(() => new StatusRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StatusRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TheThingsNetwork.API.Handler.HandlerReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StatusRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StatusRequest(StatusRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StatusRequest Clone() {
      return new StatusRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StatusRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StatusRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StatusRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// message Status is the response to the StatusRequest
  /// </summary>
  public sealed partial class Status : pb::IMessage<Status> {
    private static readonly pb::MessageParser<Status> _parser = new pb::MessageParser<Status>(() => new Status());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Status> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TheThingsNetwork.API.Handler.HandlerReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Status() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Status(Status other) : this() {
      system_ = other.system_ != null ? other.system_.Clone() : null;
      component_ = other.component_ != null ? other.component_.Clone() : null;
      uplink_ = other.uplink_ != null ? other.uplink_.Clone() : null;
      downlink_ = other.downlink_ != null ? other.downlink_.Clone() : null;
      activations_ = other.activations_ != null ? other.activations_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Status Clone() {
      return new Status(this);
    }

    /// <summary>Field number for the "system" field.</summary>
    public const int SystemFieldNumber = 1;
    private global::TheThingsNetwork.API.SystemStats system_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TheThingsNetwork.API.SystemStats System {
      get { return system_; }
      set {
        system_ = value;
      }
    }

    /// <summary>Field number for the "component" field.</summary>
    public const int ComponentFieldNumber = 2;
    private global::TheThingsNetwork.API.ComponentStats component_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TheThingsNetwork.API.ComponentStats Component {
      get { return component_; }
      set {
        component_ = value;
      }
    }

    /// <summary>Field number for the "uplink" field.</summary>
    public const int UplinkFieldNumber = 11;
    private global::TheThingsNetwork.API.Rates uplink_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TheThingsNetwork.API.Rates Uplink {
      get { return uplink_; }
      set {
        uplink_ = value;
      }
    }

    /// <summary>Field number for the "downlink" field.</summary>
    public const int DownlinkFieldNumber = 12;
    private global::TheThingsNetwork.API.Rates downlink_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TheThingsNetwork.API.Rates Downlink {
      get { return downlink_; }
      set {
        downlink_ = value;
      }
    }

    /// <summary>Field number for the "activations" field.</summary>
    public const int ActivationsFieldNumber = 13;
    private global::TheThingsNetwork.API.Rates activations_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TheThingsNetwork.API.Rates Activations {
      get { return activations_; }
      set {
        activations_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Status);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Status other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(System, other.System)) return false;
      if (!object.Equals(Component, other.Component)) return false;
      if (!object.Equals(Uplink, other.Uplink)) return false;
      if (!object.Equals(Downlink, other.Downlink)) return false;
      if (!object.Equals(Activations, other.Activations)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (system_ != null) hash ^= System.GetHashCode();
      if (component_ != null) hash ^= Component.GetHashCode();
      if (uplink_ != null) hash ^= Uplink.GetHashCode();
      if (downlink_ != null) hash ^= Downlink.GetHashCode();
      if (activations_ != null) hash ^= Activations.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (system_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(System);
      }
      if (component_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Component);
      }
      if (uplink_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(Uplink);
      }
      if (downlink_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(Downlink);
      }
      if (activations_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(Activations);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (system_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(System);
      }
      if (component_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Component);
      }
      if (uplink_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Uplink);
      }
      if (downlink_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Downlink);
      }
      if (activations_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Activations);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Status other) {
      if (other == null) {
        return;
      }
      if (other.system_ != null) {
        if (system_ == null) {
          System = new global::TheThingsNetwork.API.SystemStats();
        }
        System.MergeFrom(other.System);
      }
      if (other.component_ != null) {
        if (component_ == null) {
          Component = new global::TheThingsNetwork.API.ComponentStats();
        }
        Component.MergeFrom(other.Component);
      }
      if (other.uplink_ != null) {
        if (uplink_ == null) {
          Uplink = new global::TheThingsNetwork.API.Rates();
        }
        Uplink.MergeFrom(other.Uplink);
      }
      if (other.downlink_ != null) {
        if (downlink_ == null) {
          Downlink = new global::TheThingsNetwork.API.Rates();
        }
        Downlink.MergeFrom(other.Downlink);
      }
      if (other.activations_ != null) {
        if (activations_ == null) {
          Activations = new global::TheThingsNetwork.API.Rates();
        }
        Activations.MergeFrom(other.Activations);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (system_ == null) {
              System = new global::TheThingsNetwork.API.SystemStats();
            }
            input.ReadMessage(System);
            break;
          }
          case 18: {
            if (component_ == null) {
              Component = new global::TheThingsNetwork.API.ComponentStats();
            }
            input.ReadMessage(Component);
            break;
          }
          case 90: {
            if (uplink_ == null) {
              Uplink = new global::TheThingsNetwork.API.Rates();
            }
            input.ReadMessage(Uplink);
            break;
          }
          case 98: {
            if (downlink_ == null) {
              Downlink = new global::TheThingsNetwork.API.Rates();
            }
            input.ReadMessage(Downlink);
            break;
          }
          case 106: {
            if (activations_ == null) {
              Activations = new global::TheThingsNetwork.API.Rates();
            }
            input.ReadMessage(Activations);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ApplicationIdentifier : pb::IMessage<ApplicationIdentifier> {
    private static readonly pb::MessageParser<ApplicationIdentifier> _parser = new pb::MessageParser<ApplicationIdentifier>(() => new ApplicationIdentifier());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ApplicationIdentifier> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TheThingsNetwork.API.Handler.HandlerReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApplicationIdentifier() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApplicationIdentifier(ApplicationIdentifier other) : this() {
      appId_ = other.appId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApplicationIdentifier Clone() {
      return new ApplicationIdentifier(this);
    }

    /// <summary>Field number for the "app_id" field.</summary>
    public const int AppIdFieldNumber = 1;
    private string appId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AppId {
      get { return appId_; }
      set {
        appId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ApplicationIdentifier);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ApplicationIdentifier other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AppId != other.AppId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AppId.Length != 0) hash ^= AppId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AppId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AppId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AppId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AppId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ApplicationIdentifier other) {
      if (other == null) {
        return;
      }
      if (other.AppId.Length != 0) {
        AppId = other.AppId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AppId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// The Application settings
  /// </summary>
  public sealed partial class Application : pb::IMessage<Application> {
    private static readonly pb::MessageParser<Application> _parser = new pb::MessageParser<Application>(() => new Application());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Application> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TheThingsNetwork.API.Handler.HandlerReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Application() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Application(Application other) : this() {
      appId_ = other.appId_;
      payloadFormat_ = other.payloadFormat_;
      decoder_ = other.decoder_;
      converter_ = other.converter_;
      validator_ = other.validator_;
      encoder_ = other.encoder_;
      registerOnJoinAccessKey_ = other.registerOnJoinAccessKey_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Application Clone() {
      return new Application(this);
    }

    /// <summary>Field number for the "app_id" field.</summary>
    public const int AppIdFieldNumber = 1;
    private string appId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AppId {
      get { return appId_; }
      set {
        appId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "payload_format" field.</summary>
    public const int PayloadFormatFieldNumber = 6;
    private string payloadFormat_ = "";
    /// <summary>
    /// The payload format indicates how payload is formatted.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PayloadFormat {
      get { return payloadFormat_; }
      set {
        payloadFormat_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "decoder" field.</summary>
    public const int DecoderFieldNumber = 2;
    private string decoder_ = "";
    /// <summary>
    /// The decoder is a JavaScript function that decodes a byte array to an object.
    /// This function is used when the payload format is set to custom.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Decoder {
      get { return decoder_; }
      set {
        decoder_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "converter" field.</summary>
    public const int ConverterFieldNumber = 3;
    private string converter_ = "";
    /// <summary>
    /// The converter is a JavaScript function that can be used to convert values
    /// in the object returned from the decoder. This can for example be useful to
    /// convert a voltage to a temperature. This function is used when the payload format is set to custom.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Converter {
      get { return converter_; }
      set {
        converter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "validator" field.</summary>
    public const int ValidatorFieldNumber = 4;
    private string validator_ = "";
    /// <summary>
    /// The validator is a JavaScript function that checks the validity of the
    /// object returned by the decoder or converter. If validation fails, the
    /// message is dropped. This function is used when the payload format is set to custom.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Validator {
      get { return validator_; }
      set {
        validator_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "encoder" field.</summary>
    public const int EncoderFieldNumber = 5;
    private string encoder_ = "";
    /// <summary>
    /// The encoder is a JavaScript function that encodes an object to a byte array.
    /// This function is used when the payload format is set to custom.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Encoder {
      get { return encoder_; }
      set {
        encoder_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "register_on_join_access_key" field.</summary>
    public const int RegisterOnJoinAccessKeyFieldNumber = 7;
    private string registerOnJoinAccessKey_ = "";
    /// <summary>
    /// The "register on join" access key should only be set if devices need to be registered on join
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RegisterOnJoinAccessKey {
      get { return registerOnJoinAccessKey_; }
      set {
        registerOnJoinAccessKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Application);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Application other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AppId != other.AppId) return false;
      if (PayloadFormat != other.PayloadFormat) return false;
      if (Decoder != other.Decoder) return false;
      if (Converter != other.Converter) return false;
      if (Validator != other.Validator) return false;
      if (Encoder != other.Encoder) return false;
      if (RegisterOnJoinAccessKey != other.RegisterOnJoinAccessKey) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AppId.Length != 0) hash ^= AppId.GetHashCode();
      if (PayloadFormat.Length != 0) hash ^= PayloadFormat.GetHashCode();
      if (Decoder.Length != 0) hash ^= Decoder.GetHashCode();
      if (Converter.Length != 0) hash ^= Converter.GetHashCode();
      if (Validator.Length != 0) hash ^= Validator.GetHashCode();
      if (Encoder.Length != 0) hash ^= Encoder.GetHashCode();
      if (RegisterOnJoinAccessKey.Length != 0) hash ^= RegisterOnJoinAccessKey.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AppId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AppId);
      }
      if (Decoder.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Decoder);
      }
      if (Converter.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Converter);
      }
      if (Validator.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Validator);
      }
      if (Encoder.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Encoder);
      }
      if (PayloadFormat.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(PayloadFormat);
      }
      if (RegisterOnJoinAccessKey.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(RegisterOnJoinAccessKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AppId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AppId);
      }
      if (PayloadFormat.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PayloadFormat);
      }
      if (Decoder.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Decoder);
      }
      if (Converter.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Converter);
      }
      if (Validator.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Validator);
      }
      if (Encoder.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Encoder);
      }
      if (RegisterOnJoinAccessKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RegisterOnJoinAccessKey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Application other) {
      if (other == null) {
        return;
      }
      if (other.AppId.Length != 0) {
        AppId = other.AppId;
      }
      if (other.PayloadFormat.Length != 0) {
        PayloadFormat = other.PayloadFormat;
      }
      if (other.Decoder.Length != 0) {
        Decoder = other.Decoder;
      }
      if (other.Converter.Length != 0) {
        Converter = other.Converter;
      }
      if (other.Validator.Length != 0) {
        Validator = other.Validator;
      }
      if (other.Encoder.Length != 0) {
        Encoder = other.Encoder;
      }
      if (other.RegisterOnJoinAccessKey.Length != 0) {
        RegisterOnJoinAccessKey = other.RegisterOnJoinAccessKey;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AppId = input.ReadString();
            break;
          }
          case 18: {
            Decoder = input.ReadString();
            break;
          }
          case 26: {
            Converter = input.ReadString();
            break;
          }
          case 34: {
            Validator = input.ReadString();
            break;
          }
          case 42: {
            Encoder = input.ReadString();
            break;
          }
          case 50: {
            PayloadFormat = input.ReadString();
            break;
          }
          case 58: {
            RegisterOnJoinAccessKey = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeviceIdentifier : pb::IMessage<DeviceIdentifier> {
    private static readonly pb::MessageParser<DeviceIdentifier> _parser = new pb::MessageParser<DeviceIdentifier>(() => new DeviceIdentifier());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeviceIdentifier> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TheThingsNetwork.API.Handler.HandlerReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceIdentifier() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceIdentifier(DeviceIdentifier other) : this() {
      appId_ = other.appId_;
      devId_ = other.devId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceIdentifier Clone() {
      return new DeviceIdentifier(this);
    }

    /// <summary>Field number for the "app_id" field.</summary>
    public const int AppIdFieldNumber = 1;
    private string appId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AppId {
      get { return appId_; }
      set {
        appId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "dev_id" field.</summary>
    public const int DevIdFieldNumber = 2;
    private string devId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DevId {
      get { return devId_; }
      set {
        devId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeviceIdentifier);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeviceIdentifier other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AppId != other.AppId) return false;
      if (DevId != other.DevId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AppId.Length != 0) hash ^= AppId.GetHashCode();
      if (DevId.Length != 0) hash ^= DevId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AppId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AppId);
      }
      if (DevId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DevId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AppId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AppId);
      }
      if (DevId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DevId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeviceIdentifier other) {
      if (other == null) {
        return;
      }
      if (other.AppId.Length != 0) {
        AppId = other.AppId;
      }
      if (other.DevId.Length != 0) {
        DevId = other.DevId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AppId = input.ReadString();
            break;
          }
          case 18: {
            DevId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// The Device settings
  /// </summary>
  public sealed partial class Device : pb::IMessage<Device> {
    private static readonly pb::MessageParser<Device> _parser = new pb::MessageParser<Device>(() => new Device());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Device> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TheThingsNetwork.API.Handler.HandlerReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Device() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Device(Device other) : this() {
      appId_ = other.appId_;
      devId_ = other.devId_;
      latitude_ = other.latitude_;
      longitude_ = other.longitude_;
      altitude_ = other.altitude_;
      attributes_ = other.attributes_.Clone();
      description_ = other.description_;
      switch (other.DeviceCase) {
        case DeviceOneofCase.LorawanDevice:
          LorawanDevice = other.LorawanDevice.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Device Clone() {
      return new Device(this);
    }

    /// <summary>Field number for the "app_id" field.</summary>
    public const int AppIdFieldNumber = 1;
    private string appId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AppId {
      get { return appId_; }
      set {
        appId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "dev_id" field.</summary>
    public const int DevIdFieldNumber = 2;
    private string devId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DevId {
      get { return devId_; }
      set {
        devId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "lorawan_device" field.</summary>
    public const int LorawanDeviceFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TheThingsNetwork.API.LoRaWANProtocol.Device LorawanDevice {
      get { return deviceCase_ == DeviceOneofCase.LorawanDevice ? (global::TheThingsNetwork.API.LoRaWANProtocol.Device) device_ : null; }
      set {
        device_ = value;
        deviceCase_ = value == null ? DeviceOneofCase.None : DeviceOneofCase.LorawanDevice;
      }
    }

    /// <summary>Field number for the "latitude" field.</summary>
    public const int LatitudeFieldNumber = 10;
    private float latitude_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Latitude {
      get { return latitude_; }
      set {
        latitude_ = value;
      }
    }

    /// <summary>Field number for the "longitude" field.</summary>
    public const int LongitudeFieldNumber = 11;
    private float longitude_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Longitude {
      get { return longitude_; }
      set {
        longitude_ = value;
      }
    }

    /// <summary>Field number for the "altitude" field.</summary>
    public const int AltitudeFieldNumber = 12;
    private int altitude_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Altitude {
      get { return altitude_; }
      set {
        altitude_ = value;
      }
    }

    /// <summary>Field number for the "attributes" field.</summary>
    public const int AttributesFieldNumber = 13;
    private static readonly pbc::MapField<string, string>.Codec _map_attributes_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 106);
    private readonly pbc::MapField<string, string> attributes_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Attributes {
      get { return attributes_; }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 20;
    private string description_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    private object device_;
    /// <summary>Enum of possible cases for the "device" oneof.</summary>
    public enum DeviceOneofCase {
      None = 0,
      LorawanDevice = 3,
    }
    private DeviceOneofCase deviceCase_ = DeviceOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceOneofCase DeviceCase {
      get { return deviceCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDevice() {
      deviceCase_ = DeviceOneofCase.None;
      device_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Device);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Device other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AppId != other.AppId) return false;
      if (DevId != other.DevId) return false;
      if (!object.Equals(LorawanDevice, other.LorawanDevice)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Latitude, other.Latitude)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Longitude, other.Longitude)) return false;
      if (Altitude != other.Altitude) return false;
      if (!Attributes.Equals(other.Attributes)) return false;
      if (Description != other.Description) return false;
      if (DeviceCase != other.DeviceCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AppId.Length != 0) hash ^= AppId.GetHashCode();
      if (DevId.Length != 0) hash ^= DevId.GetHashCode();
      if (deviceCase_ == DeviceOneofCase.LorawanDevice) hash ^= LorawanDevice.GetHashCode();
      if (Latitude != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Latitude);
      if (Longitude != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Longitude);
      if (Altitude != 0) hash ^= Altitude.GetHashCode();
      hash ^= Attributes.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      hash ^= (int) deviceCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AppId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AppId);
      }
      if (DevId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DevId);
      }
      if (deviceCase_ == DeviceOneofCase.LorawanDevice) {
        output.WriteRawTag(26);
        output.WriteMessage(LorawanDevice);
      }
      if (Latitude != 0F) {
        output.WriteRawTag(85);
        output.WriteFloat(Latitude);
      }
      if (Longitude != 0F) {
        output.WriteRawTag(93);
        output.WriteFloat(Longitude);
      }
      if (Altitude != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(Altitude);
      }
      attributes_.WriteTo(output, _map_attributes_codec);
      if (Description.Length != 0) {
        output.WriteRawTag(162, 1);
        output.WriteString(Description);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AppId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AppId);
      }
      if (DevId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DevId);
      }
      if (deviceCase_ == DeviceOneofCase.LorawanDevice) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LorawanDevice);
      }
      if (Latitude != 0F) {
        size += 1 + 4;
      }
      if (Longitude != 0F) {
        size += 1 + 4;
      }
      if (Altitude != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Altitude);
      }
      size += attributes_.CalculateSize(_map_attributes_codec);
      if (Description.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Device other) {
      if (other == null) {
        return;
      }
      if (other.AppId.Length != 0) {
        AppId = other.AppId;
      }
      if (other.DevId.Length != 0) {
        DevId = other.DevId;
      }
      if (other.Latitude != 0F) {
        Latitude = other.Latitude;
      }
      if (other.Longitude != 0F) {
        Longitude = other.Longitude;
      }
      if (other.Altitude != 0) {
        Altitude = other.Altitude;
      }
      attributes_.Add(other.attributes_);
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      switch (other.DeviceCase) {
        case DeviceOneofCase.LorawanDevice:
          if (LorawanDevice == null) {
            LorawanDevice = new global::TheThingsNetwork.API.LoRaWANProtocol.Device();
          }
          LorawanDevice.MergeFrom(other.LorawanDevice);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AppId = input.ReadString();
            break;
          }
          case 18: {
            DevId = input.ReadString();
            break;
          }
          case 26: {
            global::TheThingsNetwork.API.LoRaWANProtocol.Device subBuilder = new global::TheThingsNetwork.API.LoRaWANProtocol.Device();
            if (deviceCase_ == DeviceOneofCase.LorawanDevice) {
              subBuilder.MergeFrom(LorawanDevice);
            }
            input.ReadMessage(subBuilder);
            LorawanDevice = subBuilder;
            break;
          }
          case 85: {
            Latitude = input.ReadFloat();
            break;
          }
          case 93: {
            Longitude = input.ReadFloat();
            break;
          }
          case 96: {
            Altitude = input.ReadInt32();
            break;
          }
          case 106: {
            attributes_.AddEntriesFrom(input, _map_attributes_codec);
            break;
          }
          case 162: {
            Description = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeviceList : pb::IMessage<DeviceList> {
    private static readonly pb::MessageParser<DeviceList> _parser = new pb::MessageParser<DeviceList>(() => new DeviceList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeviceList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TheThingsNetwork.API.Handler.HandlerReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceList(DeviceList other) : this() {
      devices_ = other.devices_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceList Clone() {
      return new DeviceList(this);
    }

    /// <summary>Field number for the "devices" field.</summary>
    public const int DevicesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::TheThingsNetwork.API.Handler.Device> _repeated_devices_codec
        = pb::FieldCodec.ForMessage(10, global::TheThingsNetwork.API.Handler.Device.Parser);
    private readonly pbc::RepeatedField<global::TheThingsNetwork.API.Handler.Device> devices_ = new pbc::RepeatedField<global::TheThingsNetwork.API.Handler.Device>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TheThingsNetwork.API.Handler.Device> Devices {
      get { return devices_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeviceList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeviceList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!devices_.Equals(other.devices_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= devices_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      devices_.WriteTo(output, _repeated_devices_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += devices_.CalculateSize(_repeated_devices_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeviceList other) {
      if (other == null) {
        return;
      }
      devices_.Add(other.devices_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            devices_.AddEntriesFrom(input, _repeated_devices_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// DryDownlinkMessage is a simulated message to test downlink processing
  /// </summary>
  public sealed partial class DryDownlinkMessage : pb::IMessage<DryDownlinkMessage> {
    private static readonly pb::MessageParser<DryDownlinkMessage> _parser = new pb::MessageParser<DryDownlinkMessage>(() => new DryDownlinkMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DryDownlinkMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TheThingsNetwork.API.Handler.HandlerReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DryDownlinkMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DryDownlinkMessage(DryDownlinkMessage other) : this() {
      payload_ = other.payload_;
      fields_ = other.fields_;
      app_ = other.app_ != null ? other.app_.Clone() : null;
      port_ = other.port_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DryDownlinkMessage Clone() {
      return new DryDownlinkMessage(this);
    }

    /// <summary>Field number for the "payload" field.</summary>
    public const int PayloadFieldNumber = 1;
    private pb::ByteString payload_ = pb::ByteString.Empty;
    /// <summary>
    /// The binary payload to use
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Payload {
      get { return payload_; }
      set {
        payload_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fields" field.</summary>
    public const int FieldsFieldNumber = 2;
    private string fields_ = "";
    /// <summary>
    /// JSON-encoded object with fields to encode
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Fields {
      get { return fields_; }
      set {
        fields_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "app" field.</summary>
    public const int AppFieldNumber = 3;
    private global::TheThingsNetwork.API.Handler.Application app_;
    /// <summary>
    /// The Application containing the payload functions that should be executed
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TheThingsNetwork.API.Handler.Application App {
      get { return app_; }
      set {
        app_ = value;
      }
    }

    /// <summary>Field number for the "port" field.</summary>
    public const int PortFieldNumber = 4;
    private uint port_;
    /// <summary>
    /// The port number that should be passed to the payload function
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Port {
      get { return port_; }
      set {
        port_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DryDownlinkMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DryDownlinkMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Payload != other.Payload) return false;
      if (Fields != other.Fields) return false;
      if (!object.Equals(App, other.App)) return false;
      if (Port != other.Port) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Payload.Length != 0) hash ^= Payload.GetHashCode();
      if (Fields.Length != 0) hash ^= Fields.GetHashCode();
      if (app_ != null) hash ^= App.GetHashCode();
      if (Port != 0) hash ^= Port.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Payload.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Payload);
      }
      if (Fields.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Fields);
      }
      if (app_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(App);
      }
      if (Port != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Port);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Payload.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Payload);
      }
      if (Fields.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Fields);
      }
      if (app_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(App);
      }
      if (Port != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Port);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DryDownlinkMessage other) {
      if (other == null) {
        return;
      }
      if (other.Payload.Length != 0) {
        Payload = other.Payload;
      }
      if (other.Fields.Length != 0) {
        Fields = other.Fields;
      }
      if (other.app_ != null) {
        if (app_ == null) {
          App = new global::TheThingsNetwork.API.Handler.Application();
        }
        App.MergeFrom(other.App);
      }
      if (other.Port != 0) {
        Port = other.Port;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Payload = input.ReadBytes();
            break;
          }
          case 18: {
            Fields = input.ReadString();
            break;
          }
          case 26: {
            if (app_ == null) {
              App = new global::TheThingsNetwork.API.Handler.Application();
            }
            input.ReadMessage(App);
            break;
          }
          case 32: {
            Port = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// DryUplinkMessage is a simulated message to test uplink processing
  /// </summary>
  public sealed partial class DryUplinkMessage : pb::IMessage<DryUplinkMessage> {
    private static readonly pb::MessageParser<DryUplinkMessage> _parser = new pb::MessageParser<DryUplinkMessage>(() => new DryUplinkMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DryUplinkMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TheThingsNetwork.API.Handler.HandlerReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DryUplinkMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DryUplinkMessage(DryUplinkMessage other) : this() {
      payload_ = other.payload_;
      app_ = other.app_ != null ? other.app_.Clone() : null;
      port_ = other.port_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DryUplinkMessage Clone() {
      return new DryUplinkMessage(this);
    }

    /// <summary>Field number for the "payload" field.</summary>
    public const int PayloadFieldNumber = 1;
    private pb::ByteString payload_ = pb::ByteString.Empty;
    /// <summary>
    /// The binary payload to use
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Payload {
      get { return payload_; }
      set {
        payload_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "app" field.</summary>
    public const int AppFieldNumber = 2;
    private global::TheThingsNetwork.API.Handler.Application app_;
    /// <summary>
    /// The Application containing the payload functions that should be executed
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TheThingsNetwork.API.Handler.Application App {
      get { return app_; }
      set {
        app_ = value;
      }
    }

    /// <summary>Field number for the "port" field.</summary>
    public const int PortFieldNumber = 3;
    private uint port_;
    /// <summary>
    /// The port number that should be passed to the payload function
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Port {
      get { return port_; }
      set {
        port_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DryUplinkMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DryUplinkMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Payload != other.Payload) return false;
      if (!object.Equals(App, other.App)) return false;
      if (Port != other.Port) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Payload.Length != 0) hash ^= Payload.GetHashCode();
      if (app_ != null) hash ^= App.GetHashCode();
      if (Port != 0) hash ^= Port.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Payload.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Payload);
      }
      if (app_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(App);
      }
      if (Port != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Port);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Payload.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Payload);
      }
      if (app_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(App);
      }
      if (Port != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Port);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DryUplinkMessage other) {
      if (other == null) {
        return;
      }
      if (other.Payload.Length != 0) {
        Payload = other.Payload;
      }
      if (other.app_ != null) {
        if (app_ == null) {
          App = new global::TheThingsNetwork.API.Handler.Application();
        }
        App.MergeFrom(other.App);
      }
      if (other.Port != 0) {
        Port = other.Port;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Payload = input.ReadBytes();
            break;
          }
          case 18: {
            if (app_ == null) {
              App = new global::TheThingsNetwork.API.Handler.Application();
            }
            input.ReadMessage(App);
            break;
          }
          case 24: {
            Port = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// SimulatedUplinkMessage is a simulated uplink message
  /// </summary>
  public sealed partial class SimulatedUplinkMessage : pb::IMessage<SimulatedUplinkMessage> {
    private static readonly pb::MessageParser<SimulatedUplinkMessage> _parser = new pb::MessageParser<SimulatedUplinkMessage>(() => new SimulatedUplinkMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SimulatedUplinkMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TheThingsNetwork.API.Handler.HandlerReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SimulatedUplinkMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SimulatedUplinkMessage(SimulatedUplinkMessage other) : this() {
      appId_ = other.appId_;
      devId_ = other.devId_;
      payload_ = other.payload_;
      port_ = other.port_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SimulatedUplinkMessage Clone() {
      return new SimulatedUplinkMessage(this);
    }

    /// <summary>Field number for the "app_id" field.</summary>
    public const int AppIdFieldNumber = 1;
    private string appId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AppId {
      get { return appId_; }
      set {
        appId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "dev_id" field.</summary>
    public const int DevIdFieldNumber = 2;
    private string devId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DevId {
      get { return devId_; }
      set {
        devId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "payload" field.</summary>
    public const int PayloadFieldNumber = 3;
    private pb::ByteString payload_ = pb::ByteString.Empty;
    /// <summary>
    /// The binary payload to use
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Payload {
      get { return payload_; }
      set {
        payload_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "port" field.</summary>
    public const int PortFieldNumber = 4;
    private uint port_;
    /// <summary>
    /// The port number
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Port {
      get { return port_; }
      set {
        port_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SimulatedUplinkMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SimulatedUplinkMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AppId != other.AppId) return false;
      if (DevId != other.DevId) return false;
      if (Payload != other.Payload) return false;
      if (Port != other.Port) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AppId.Length != 0) hash ^= AppId.GetHashCode();
      if (DevId.Length != 0) hash ^= DevId.GetHashCode();
      if (Payload.Length != 0) hash ^= Payload.GetHashCode();
      if (Port != 0) hash ^= Port.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AppId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AppId);
      }
      if (DevId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DevId);
      }
      if (Payload.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(Payload);
      }
      if (Port != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Port);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AppId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AppId);
      }
      if (DevId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DevId);
      }
      if (Payload.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Payload);
      }
      if (Port != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Port);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SimulatedUplinkMessage other) {
      if (other == null) {
        return;
      }
      if (other.AppId.Length != 0) {
        AppId = other.AppId;
      }
      if (other.DevId.Length != 0) {
        DevId = other.DevId;
      }
      if (other.Payload.Length != 0) {
        Payload = other.Payload;
      }
      if (other.Port != 0) {
        Port = other.Port;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AppId = input.ReadString();
            break;
          }
          case 18: {
            DevId = input.ReadString();
            break;
          }
          case 26: {
            Payload = input.ReadBytes();
            break;
          }
          case 32: {
            Port = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LogEntry : pb::IMessage<LogEntry> {
    private static readonly pb::MessageParser<LogEntry> _parser = new pb::MessageParser<LogEntry>(() => new LogEntry());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LogEntry> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TheThingsNetwork.API.Handler.HandlerReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogEntry() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogEntry(LogEntry other) : this() {
      function_ = other.function_;
      fields_ = other.fields_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogEntry Clone() {
      return new LogEntry(this);
    }

    /// <summary>Field number for the "function" field.</summary>
    public const int FunctionFieldNumber = 1;
    private string function_ = "";
    /// <summary>
    /// The location where the log was created (what payload function)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Function {
      get { return function_; }
      set {
        function_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fields" field.</summary>
    public const int FieldsFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_fields_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> fields_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// A list of JSON-encoded fields that were logged
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Fields {
      get { return fields_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LogEntry);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LogEntry other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Function != other.Function) return false;
      if(!fields_.Equals(other.fields_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Function.Length != 0) hash ^= Function.GetHashCode();
      hash ^= fields_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Function.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Function);
      }
      fields_.WriteTo(output, _repeated_fields_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Function.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Function);
      }
      size += fields_.CalculateSize(_repeated_fields_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LogEntry other) {
      if (other == null) {
        return;
      }
      if (other.Function.Length != 0) {
        Function = other.Function;
      }
      fields_.Add(other.fields_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Function = input.ReadString();
            break;
          }
          case 18: {
            fields_.AddEntriesFrom(input, _repeated_fields_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// DryUplinkResult is the result from an uplink simulation
  /// </summary>
  public sealed partial class DryUplinkResult : pb::IMessage<DryUplinkResult> {
    private static readonly pb::MessageParser<DryUplinkResult> _parser = new pb::MessageParser<DryUplinkResult>(() => new DryUplinkResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DryUplinkResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TheThingsNetwork.API.Handler.HandlerReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DryUplinkResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DryUplinkResult(DryUplinkResult other) : this() {
      payload_ = other.payload_;
      fields_ = other.fields_;
      valid_ = other.valid_;
      logs_ = other.logs_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DryUplinkResult Clone() {
      return new DryUplinkResult(this);
    }

    /// <summary>Field number for the "payload" field.</summary>
    public const int PayloadFieldNumber = 1;
    private pb::ByteString payload_ = pb::ByteString.Empty;
    /// <summary>
    /// The binary payload
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Payload {
      get { return payload_; }
      set {
        payload_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fields" field.</summary>
    public const int FieldsFieldNumber = 2;
    private string fields_ = "";
    /// <summary>
    /// The decoded fields
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Fields {
      get { return fields_; }
      set {
        fields_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "valid" field.</summary>
    public const int ValidFieldNumber = 3;
    private bool valid_;
    /// <summary>
    /// Was validation of the message successful
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Valid {
      get { return valid_; }
      set {
        valid_ = value;
      }
    }

    /// <summary>Field number for the "logs" field.</summary>
    public const int LogsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::TheThingsNetwork.API.Handler.LogEntry> _repeated_logs_codec
        = pb::FieldCodec.ForMessage(34, global::TheThingsNetwork.API.Handler.LogEntry.Parser);
    private readonly pbc::RepeatedField<global::TheThingsNetwork.API.Handler.LogEntry> logs_ = new pbc::RepeatedField<global::TheThingsNetwork.API.Handler.LogEntry>();
    /// <summary>
    /// Logs that have been generated while processing
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TheThingsNetwork.API.Handler.LogEntry> Logs {
      get { return logs_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DryUplinkResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DryUplinkResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Payload != other.Payload) return false;
      if (Fields != other.Fields) return false;
      if (Valid != other.Valid) return false;
      if(!logs_.Equals(other.logs_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Payload.Length != 0) hash ^= Payload.GetHashCode();
      if (Fields.Length != 0) hash ^= Fields.GetHashCode();
      if (Valid != false) hash ^= Valid.GetHashCode();
      hash ^= logs_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Payload.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Payload);
      }
      if (Fields.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Fields);
      }
      if (Valid != false) {
        output.WriteRawTag(24);
        output.WriteBool(Valid);
      }
      logs_.WriteTo(output, _repeated_logs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Payload.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Payload);
      }
      if (Fields.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Fields);
      }
      if (Valid != false) {
        size += 1 + 1;
      }
      size += logs_.CalculateSize(_repeated_logs_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DryUplinkResult other) {
      if (other == null) {
        return;
      }
      if (other.Payload.Length != 0) {
        Payload = other.Payload;
      }
      if (other.Fields.Length != 0) {
        Fields = other.Fields;
      }
      if (other.Valid != false) {
        Valid = other.Valid;
      }
      logs_.Add(other.logs_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Payload = input.ReadBytes();
            break;
          }
          case 18: {
            Fields = input.ReadString();
            break;
          }
          case 24: {
            Valid = input.ReadBool();
            break;
          }
          case 34: {
            logs_.AddEntriesFrom(input, _repeated_logs_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// DryDownlinkResult is the result from a downlink simulation
  /// </summary>
  public sealed partial class DryDownlinkResult : pb::IMessage<DryDownlinkResult> {
    private static readonly pb::MessageParser<DryDownlinkResult> _parser = new pb::MessageParser<DryDownlinkResult>(() => new DryDownlinkResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DryDownlinkResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TheThingsNetwork.API.Handler.HandlerReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DryDownlinkResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DryDownlinkResult(DryDownlinkResult other) : this() {
      payload_ = other.payload_;
      logs_ = other.logs_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DryDownlinkResult Clone() {
      return new DryDownlinkResult(this);
    }

    /// <summary>Field number for the "payload" field.</summary>
    public const int PayloadFieldNumber = 1;
    private pb::ByteString payload_ = pb::ByteString.Empty;
    /// <summary>
    /// The payload that was encoded
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Payload {
      get { return payload_; }
      set {
        payload_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "logs" field.</summary>
    public const int LogsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::TheThingsNetwork.API.Handler.LogEntry> _repeated_logs_codec
        = pb::FieldCodec.ForMessage(18, global::TheThingsNetwork.API.Handler.LogEntry.Parser);
    private readonly pbc::RepeatedField<global::TheThingsNetwork.API.Handler.LogEntry> logs_ = new pbc::RepeatedField<global::TheThingsNetwork.API.Handler.LogEntry>();
    /// <summary>
    /// Logs that have been generated while processing
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TheThingsNetwork.API.Handler.LogEntry> Logs {
      get { return logs_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DryDownlinkResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DryDownlinkResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Payload != other.Payload) return false;
      if(!logs_.Equals(other.logs_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Payload.Length != 0) hash ^= Payload.GetHashCode();
      hash ^= logs_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Payload.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Payload);
      }
      logs_.WriteTo(output, _repeated_logs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Payload.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Payload);
      }
      size += logs_.CalculateSize(_repeated_logs_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DryDownlinkResult other) {
      if (other == null) {
        return;
      }
      if (other.Payload.Length != 0) {
        Payload = other.Payload;
      }
      logs_.Add(other.logs_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Payload = input.ReadBytes();
            break;
          }
          case 18: {
            logs_.AddEntriesFrom(input, _repeated_logs_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
