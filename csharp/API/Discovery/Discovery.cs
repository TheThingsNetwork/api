// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: github.com/TheThingsNetwork/api/discovery/discovery.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace TheThingsNetwork.API.Discovery {

  /// <summary>Holder for reflection information generated from github.com/TheThingsNetwork/api/discovery/discovery.proto</summary>
  public static partial class DiscoveryReflection {

    #region Descriptor
    /// <summary>File descriptor for github.com/TheThingsNetwork/api/discovery/discovery.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DiscoveryReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjlnaXRodWIuY29tL1RoZVRoaW5nc05ldHdvcmsvYXBpL2Rpc2NvdmVyeS9k",
            "aXNjb3ZlcnkucHJvdG8SCWRpc2NvdmVyeRobZ29vZ2xlL3Byb3RvYnVmL2Vt",
            "cHR5LnByb3RvGhxnb29nbGUvYXBpL2Fubm90YXRpb25zLnByb3RvGi1naXRo",
            "dWIuY29tL2dvZ28vcHJvdG9idWYvZ29nb3Byb3RvL2dvZ28ucHJvdG8ikgEK",
            "CE1ldGFkYXRhEiMKCmdhdGV3YXlfaWQYCiABKAlCDeLeHwlHYXRld2F5SURI",
            "ABIZCg9kZXZfYWRkcl9wcmVmaXgYFCABKAxIABIbCgZhcHBfaWQYHiABKAlC",
            "CeLeHwVBcHBJREgAEh0KB2FwcF9ldWkYHyABKAxCCuLeHwZBcHBFVUlIAEIK",
            "CghtZXRhZGF0YSKpAgoMQW5ub3VuY2VtZW50EhIKAmlkGAEgASgJQgbi3h8C",
            "SUQSFAoMc2VydmljZV9uYW1lGAIgASgJEhcKD3NlcnZpY2VfdmVyc2lvbhgD",
            "IAEoCRITCgtkZXNjcmlwdGlvbhgEIAEoCRILCgN1cmwYBSABKAkSDgoGcHVi",
            "bGljGAYgASgIEhMKC25ldF9hZGRyZXNzGAsgASgJEhIKCnB1YmxpY19rZXkY",
            "DCABKAkSEwoLY2VydGlmaWNhdGUYDSABKAkSEwoLYXBpX2FkZHJlc3MYDiAB",
            "KAkSFAoMbXF0dF9hZGRyZXNzGA8gASgJEhQKDGFtcXBfYWRkcmVzcxgQIAEo",
            "CRIlCghtZXRhZGF0YRgWIAMoCzITLmRpc2NvdmVyeS5NZXRhZGF0YSIpChFH",
            "ZXRTZXJ2aWNlUmVxdWVzdBIUCgxzZXJ2aWNlX25hbWUYASABKAkiNgoKR2V0",
            "UmVxdWVzdBISCgJpZBgBIAEoCUIG4t4fAklEEhQKDHNlcnZpY2VfbmFtZRgC",
            "IAEoCSJoCg9NZXRhZGF0YVJlcXVlc3QSEgoCaWQYASABKAlCBuLeHwJJRBIU",
            "CgxzZXJ2aWNlX25hbWUYAiABKAkSKwoIbWV0YWRhdGEYDCABKAsyEy5kaXNj",
            "b3ZlcnkuTWV0YWRhdGFCBMjeHwAiQgoVQW5ub3VuY2VtZW50c1Jlc3BvbnNl",
            "EikKCHNlcnZpY2VzGAEgAygLMhcuZGlzY292ZXJ5LkFubm91bmNlbWVudCIu",
            "ChFHZXRCeUFwcElEUmVxdWVzdBIZCgZhcHBfaWQYHiABKAlCCeLeHwVBcHBJ",
            "RCI6ChVHZXRCeUdhdGV3YXlJRFJlcXVlc3QSIQoKZ2F0ZXdheV9pZBgeIAEo",
            "CUIN4t4fCUdhdGV3YXlJRCJqChJHZXRCeUFwcEVVSVJlcXVlc3QSVAoHYXBw",
            "X2V1aRgfIAEoDEJD4t4fBkFwcEVVScjeHwDa3h8xZ2l0aHViLmNvbS9UaGVU",
            "aGluZ3NOZXR3b3JrL3R0bi9jb3JlL3R5cGVzLkFwcEVVSTL+BAoJRGlzY292",
            "ZXJ5EjsKCEFubm91bmNlEhcuZGlzY292ZXJ5LkFubm91bmNlbWVudBoWLmdv",
            "b2dsZS5wcm90b2J1Zi5FbXB0eRJvCgZHZXRBbGwSHC5kaXNjb3ZlcnkuR2V0",
            "U2VydmljZVJlcXVlc3QaIC5kaXNjb3ZlcnkuQW5ub3VuY2VtZW50c1Jlc3Bv",
            "bnNlIiWC0+STAh8SHS9hbm5vdW5jZW1lbnRzL3tzZXJ2aWNlX25hbWV9EmEK",
            "A0dldBIVLmRpc2NvdmVyeS5HZXRSZXF1ZXN0GhcuZGlzY292ZXJ5LkFubm91",
            "bmNlbWVudCIqgtPkkwIkEiIvYW5ub3VuY2VtZW50cy97c2VydmljZV9uYW1l",
            "fS97aWR9EkEKC0FkZE1ldGFkYXRhEhouZGlzY292ZXJ5Lk1ldGFkYXRhUmVx",
            "dWVzdBoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eRJECg5EZWxldGVNZXRhZGF0",
            "YRIaLmRpc2NvdmVyeS5NZXRhZGF0YVJlcXVlc3QaFi5nb29nbGUucHJvdG9i",
            "dWYuRW1wdHkSQwoKR2V0QnlBcHBJRBIcLmRpc2NvdmVyeS5HZXRCeUFwcElE",
            "UmVxdWVzdBoXLmRpc2NvdmVyeS5Bbm5vdW5jZW1lbnQSSwoOR2V0QnlHYXRl",
            "d2F5SUQSIC5kaXNjb3ZlcnkuR2V0QnlHYXRld2F5SURSZXF1ZXN0GhcuZGlz",
            "Y292ZXJ5LkFubm91bmNlbWVudBJFCgtHZXRCeUFwcEVVSRIdLmRpc2NvdmVy",
            "eS5HZXRCeUFwcEVVSVJlcXVlc3QaFy5kaXNjb3ZlcnkuQW5ub3VuY2VtZW50",
            "MhIKEERpc2NvdmVyeU1hbmFnZXJCggEKIm9yZy50aGV0aGluZ3NuZXR3b3Jr",
            "LmFwaS5kaXNjb3ZlcnlCDkRpc2NvdmVyeVByb3RvUAFaKWdpdGh1Yi5jb20v",
            "VGhlVGhpbmdzTmV0d29yay9hcGkvZGlzY292ZXJ5qgIeVGhlVGhpbmdzTmV0",
            "d29yay5BUEkuRGlzY292ZXJ5YgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, global::Google.Api.AnnotationsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::TheThingsNetwork.API.Discovery.Metadata), global::TheThingsNetwork.API.Discovery.Metadata.Parser, new[]{ "GatewayId", "DevAddrPrefix", "AppId", "AppEui" }, new[]{ "Metadata" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TheThingsNetwork.API.Discovery.Announcement), global::TheThingsNetwork.API.Discovery.Announcement.Parser, new[]{ "Id", "ServiceName", "ServiceVersion", "Description", "Url", "Public", "NetAddress", "PublicKey", "Certificate", "ApiAddress", "MqttAddress", "AmqpAddress", "Metadata" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TheThingsNetwork.API.Discovery.GetServiceRequest), global::TheThingsNetwork.API.Discovery.GetServiceRequest.Parser, new[]{ "ServiceName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TheThingsNetwork.API.Discovery.GetRequest), global::TheThingsNetwork.API.Discovery.GetRequest.Parser, new[]{ "Id", "ServiceName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TheThingsNetwork.API.Discovery.MetadataRequest), global::TheThingsNetwork.API.Discovery.MetadataRequest.Parser, new[]{ "Id", "ServiceName", "Metadata" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TheThingsNetwork.API.Discovery.AnnouncementsResponse), global::TheThingsNetwork.API.Discovery.AnnouncementsResponse.Parser, new[]{ "Services" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TheThingsNetwork.API.Discovery.GetByAppIDRequest), global::TheThingsNetwork.API.Discovery.GetByAppIDRequest.Parser, new[]{ "AppId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TheThingsNetwork.API.Discovery.GetByGatewayIDRequest), global::TheThingsNetwork.API.Discovery.GetByGatewayIDRequest.Parser, new[]{ "GatewayId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TheThingsNetwork.API.Discovery.GetByAppEUIRequest), global::TheThingsNetwork.API.Discovery.GetByAppEUIRequest.Parser, new[]{ "AppEui" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Metadata : pb::IMessage<Metadata> {
    private static readonly pb::MessageParser<Metadata> _parser = new pb::MessageParser<Metadata>(() => new Metadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Metadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TheThingsNetwork.API.Discovery.DiscoveryReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Metadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Metadata(Metadata other) : this() {
      switch (other.MetadataCase) {
        case MetadataOneofCase.GatewayId:
          GatewayId = other.GatewayId;
          break;
        case MetadataOneofCase.DevAddrPrefix:
          DevAddrPrefix = other.DevAddrPrefix;
          break;
        case MetadataOneofCase.AppId:
          AppId = other.AppId;
          break;
        case MetadataOneofCase.AppEui:
          AppEui = other.AppEui;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Metadata Clone() {
      return new Metadata(this);
    }

    /// <summary>Field number for the "gateway_id" field.</summary>
    public const int GatewayIdFieldNumber = 10;
    /// <summary>
    /// GatewayID that is registered to this Router
    /// This metadata can only be added if the requesting client is authorized to manage this GatewayID.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GatewayId {
      get { return metadataCase_ == MetadataOneofCase.GatewayId ? (string) metadata_ : ""; }
      set {
        metadata_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        metadataCase_ = MetadataOneofCase.GatewayId;
      }
    }

    /// <summary>Field number for the "dev_addr_prefix" field.</summary>
    public const int DevAddrPrefixFieldNumber = 20;
    /// <summary>
    /// DevAddr prefix that is routed by this Broker
    /// 5 bytes; the first byte is the prefix length, the following 4 bytes are the address.
    /// Only authorized Brokers can announce PREFIX metadata.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString DevAddrPrefix {
      get { return metadataCase_ == MetadataOneofCase.DevAddrPrefix ? (pb::ByteString) metadata_ : pb::ByteString.Empty; }
      set {
        metadata_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        metadataCase_ = MetadataOneofCase.DevAddrPrefix;
      }
    }

    /// <summary>Field number for the "app_id" field.</summary>
    public const int AppIdFieldNumber = 30;
    /// <summary>
    /// AppID that is registered to this Handler
    /// This metadata can only be added if the requesting client is authorized to manage this AppID.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AppId {
      get { return metadataCase_ == MetadataOneofCase.AppId ? (string) metadata_ : ""; }
      set {
        metadata_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        metadataCase_ = MetadataOneofCase.AppId;
      }
    }

    /// <summary>Field number for the "app_eui" field.</summary>
    public const int AppEuiFieldNumber = 31;
    /// <summary>
    /// AppEUI that is registered to this Join Handler
    /// Only authorized Join Handlers can announce APP_EUI metadata (and we don't have any of those yet).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString AppEui {
      get { return metadataCase_ == MetadataOneofCase.AppEui ? (pb::ByteString) metadata_ : pb::ByteString.Empty; }
      set {
        metadata_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        metadataCase_ = MetadataOneofCase.AppEui;
      }
    }

    private object metadata_;
    /// <summary>Enum of possible cases for the "metadata" oneof.</summary>
    public enum MetadataOneofCase {
      None = 0,
      GatewayId = 10,
      DevAddrPrefix = 20,
      AppId = 30,
      AppEui = 31,
    }
    private MetadataOneofCase metadataCase_ = MetadataOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MetadataOneofCase MetadataCase {
      get { return metadataCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMetadata() {
      metadataCase_ = MetadataOneofCase.None;
      metadata_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Metadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Metadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GatewayId != other.GatewayId) return false;
      if (DevAddrPrefix != other.DevAddrPrefix) return false;
      if (AppId != other.AppId) return false;
      if (AppEui != other.AppEui) return false;
      if (MetadataCase != other.MetadataCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (metadataCase_ == MetadataOneofCase.GatewayId) hash ^= GatewayId.GetHashCode();
      if (metadataCase_ == MetadataOneofCase.DevAddrPrefix) hash ^= DevAddrPrefix.GetHashCode();
      if (metadataCase_ == MetadataOneofCase.AppId) hash ^= AppId.GetHashCode();
      if (metadataCase_ == MetadataOneofCase.AppEui) hash ^= AppEui.GetHashCode();
      hash ^= (int) metadataCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (metadataCase_ == MetadataOneofCase.GatewayId) {
        output.WriteRawTag(82);
        output.WriteString(GatewayId);
      }
      if (metadataCase_ == MetadataOneofCase.DevAddrPrefix) {
        output.WriteRawTag(162, 1);
        output.WriteBytes(DevAddrPrefix);
      }
      if (metadataCase_ == MetadataOneofCase.AppId) {
        output.WriteRawTag(242, 1);
        output.WriteString(AppId);
      }
      if (metadataCase_ == MetadataOneofCase.AppEui) {
        output.WriteRawTag(250, 1);
        output.WriteBytes(AppEui);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (metadataCase_ == MetadataOneofCase.GatewayId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GatewayId);
      }
      if (metadataCase_ == MetadataOneofCase.DevAddrPrefix) {
        size += 2 + pb::CodedOutputStream.ComputeBytesSize(DevAddrPrefix);
      }
      if (metadataCase_ == MetadataOneofCase.AppId) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(AppId);
      }
      if (metadataCase_ == MetadataOneofCase.AppEui) {
        size += 2 + pb::CodedOutputStream.ComputeBytesSize(AppEui);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Metadata other) {
      if (other == null) {
        return;
      }
      switch (other.MetadataCase) {
        case MetadataOneofCase.GatewayId:
          GatewayId = other.GatewayId;
          break;
        case MetadataOneofCase.DevAddrPrefix:
          DevAddrPrefix = other.DevAddrPrefix;
          break;
        case MetadataOneofCase.AppId:
          AppId = other.AppId;
          break;
        case MetadataOneofCase.AppEui:
          AppEui = other.AppEui;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 82: {
            GatewayId = input.ReadString();
            break;
          }
          case 162: {
            DevAddrPrefix = input.ReadBytes();
            break;
          }
          case 242: {
            AppId = input.ReadString();
            break;
          }
          case 250: {
            AppEui = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// The Announcement of a service (also called component)
  /// </summary>
  public sealed partial class Announcement : pb::IMessage<Announcement> {
    private static readonly pb::MessageParser<Announcement> _parser = new pb::MessageParser<Announcement>(() => new Announcement());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Announcement> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TheThingsNetwork.API.Discovery.DiscoveryReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Announcement() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Announcement(Announcement other) : this() {
      id_ = other.id_;
      serviceName_ = other.serviceName_;
      serviceVersion_ = other.serviceVersion_;
      description_ = other.description_;
      url_ = other.url_;
      public_ = other.public_;
      netAddress_ = other.netAddress_;
      publicKey_ = other.publicKey_;
      certificate_ = other.certificate_;
      apiAddress_ = other.apiAddress_;
      mqttAddress_ = other.mqttAddress_;
      amqpAddress_ = other.amqpAddress_;
      metadata_ = other.metadata_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Announcement Clone() {
      return new Announcement(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    /// The ID of the component
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "service_name" field.</summary>
    public const int ServiceNameFieldNumber = 2;
    private string serviceName_ = "";
    /// <summary>
    /// The name of the component (router/broker/handler)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServiceName {
      get { return serviceName_; }
      set {
        serviceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "service_version" field.</summary>
    public const int ServiceVersionFieldNumber = 3;
    private string serviceVersion_ = "";
    /// <summary>
    /// Service version in the form "[version]-[commit] ([build date])"
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServiceVersion {
      get { return serviceVersion_; }
      set {
        serviceVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 4;
    private string description_ = "";
    /// <summary>
    /// Description of the component
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 5;
    private string url_ = "";
    /// <summary>
    /// URL with documentation or more information about this component
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Url {
      get { return url_; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "public" field.</summary>
    public const int PublicFieldNumber = 6;
    private bool public_;
    /// <summary>
    /// Indicates whether this service is part of The Things Network (the public community network)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Public {
      get { return public_; }
      set {
        public_ = value;
      }
    }

    /// <summary>Field number for the "net_address" field.</summary>
    public const int NetAddressFieldNumber = 11;
    private string netAddress_ = "";
    /// <summary>
    /// Comma-separated network addresses in the form "domain1:port,domain2:port,domain3:port" (currently we only use the first)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NetAddress {
      get { return netAddress_; }
      set {
        netAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "public_key" field.</summary>
    public const int PublicKeyFieldNumber = 12;
    private string publicKey_ = "";
    /// <summary>
    /// ECDSA public key of this component
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PublicKey {
      get { return publicKey_; }
      set {
        publicKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "certificate" field.</summary>
    public const int CertificateFieldNumber = 13;
    private string certificate_ = "";
    /// <summary>
    /// TLS Certificate for gRPC on net_address (if TLS is enabled)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Certificate {
      get { return certificate_; }
      set {
        certificate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "api_address" field.</summary>
    public const int ApiAddressFieldNumber = 14;
    private string apiAddress_ = "";
    /// <summary>
    /// Contains the address where the HTTP API is exposed (if there is one).
    /// Format of api_address: `http(s)://domain(:port)`
    /// default http port is 80, default https port is 443.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ApiAddress {
      get { return apiAddress_; }
      set {
        apiAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "mqtt_address" field.</summary>
    public const int MqttAddressFieldNumber = 15;
    private string mqttAddress_ = "";
    /// <summary>
    /// Contains the address where the MQTT API is exposed (if there is one)
    /// Format of mqtt_address: `(mqtt(s)://)host(:port)`
    /// default mqtt port is 1883, default mqtts port is 8883.
    /// Examples:
    /// if `host:port` then `mqtt://host:port`
    /// if `host:8883` then `mqtts://host:8883`
    /// if `host` then `mqtt://host:1883` and `mqtts://host:8883`
    /// if `mqtt://host` then `mqtt://host:1883`
    /// if `mqtts://host` then `mqtt://host:1883` and `mqtts://host:8883`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MqttAddress {
      get { return mqttAddress_; }
      set {
        mqttAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "amqp_address" field.</summary>
    public const int AmqpAddressFieldNumber = 16;
    private string amqpAddress_ = "";
    /// <summary>
    /// Contains the address where the AMQP API is exposed (if there is one)
    /// Format of amqp_address: `(amqp(s)://)host(:port)`
    /// default amqp port is 5672, default amqps port is 5671.
    /// Examples:
    /// if `host:port` then `amqp://host:port`
    /// if `host:5671` then `amqps://host:5671`
    /// if `host` then `amqp://host:5672` and `amqps://host:5671`
    /// if `amqp://host` then `amqp://host:5672`
    /// if `amqps://host` then `amqp://host:5672` and `amqps://host:5671`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AmqpAddress {
      get { return amqpAddress_; }
      set {
        amqpAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 22;
    private static readonly pb::FieldCodec<global::TheThingsNetwork.API.Discovery.Metadata> _repeated_metadata_codec
        = pb::FieldCodec.ForMessage(178, global::TheThingsNetwork.API.Discovery.Metadata.Parser);
    private readonly pbc::RepeatedField<global::TheThingsNetwork.API.Discovery.Metadata> metadata_ = new pbc::RepeatedField<global::TheThingsNetwork.API.Discovery.Metadata>();
    /// <summary>
    /// Metadata for this component
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TheThingsNetwork.API.Discovery.Metadata> Metadata {
      get { return metadata_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Announcement);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Announcement other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (ServiceName != other.ServiceName) return false;
      if (ServiceVersion != other.ServiceVersion) return false;
      if (Description != other.Description) return false;
      if (Url != other.Url) return false;
      if (Public != other.Public) return false;
      if (NetAddress != other.NetAddress) return false;
      if (PublicKey != other.PublicKey) return false;
      if (Certificate != other.Certificate) return false;
      if (ApiAddress != other.ApiAddress) return false;
      if (MqttAddress != other.MqttAddress) return false;
      if (AmqpAddress != other.AmqpAddress) return false;
      if(!metadata_.Equals(other.metadata_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (ServiceName.Length != 0) hash ^= ServiceName.GetHashCode();
      if (ServiceVersion.Length != 0) hash ^= ServiceVersion.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (Url.Length != 0) hash ^= Url.GetHashCode();
      if (Public != false) hash ^= Public.GetHashCode();
      if (NetAddress.Length != 0) hash ^= NetAddress.GetHashCode();
      if (PublicKey.Length != 0) hash ^= PublicKey.GetHashCode();
      if (Certificate.Length != 0) hash ^= Certificate.GetHashCode();
      if (ApiAddress.Length != 0) hash ^= ApiAddress.GetHashCode();
      if (MqttAddress.Length != 0) hash ^= MqttAddress.GetHashCode();
      if (AmqpAddress.Length != 0) hash ^= AmqpAddress.GetHashCode();
      hash ^= metadata_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (ServiceName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ServiceName);
      }
      if (ServiceVersion.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ServiceVersion);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Description);
      }
      if (Url.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Url);
      }
      if (Public != false) {
        output.WriteRawTag(48);
        output.WriteBool(Public);
      }
      if (NetAddress.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(NetAddress);
      }
      if (PublicKey.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(PublicKey);
      }
      if (Certificate.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(Certificate);
      }
      if (ApiAddress.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(ApiAddress);
      }
      if (MqttAddress.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(MqttAddress);
      }
      if (AmqpAddress.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(AmqpAddress);
      }
      metadata_.WriteTo(output, _repeated_metadata_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (ServiceName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServiceName);
      }
      if (ServiceVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServiceVersion);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (Url.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      if (Public != false) {
        size += 1 + 1;
      }
      if (NetAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NetAddress);
      }
      if (PublicKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PublicKey);
      }
      if (Certificate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Certificate);
      }
      if (ApiAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ApiAddress);
      }
      if (MqttAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MqttAddress);
      }
      if (AmqpAddress.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(AmqpAddress);
      }
      size += metadata_.CalculateSize(_repeated_metadata_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Announcement other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.ServiceName.Length != 0) {
        ServiceName = other.ServiceName;
      }
      if (other.ServiceVersion.Length != 0) {
        ServiceVersion = other.ServiceVersion;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.Url.Length != 0) {
        Url = other.Url;
      }
      if (other.Public != false) {
        Public = other.Public;
      }
      if (other.NetAddress.Length != 0) {
        NetAddress = other.NetAddress;
      }
      if (other.PublicKey.Length != 0) {
        PublicKey = other.PublicKey;
      }
      if (other.Certificate.Length != 0) {
        Certificate = other.Certificate;
      }
      if (other.ApiAddress.Length != 0) {
        ApiAddress = other.ApiAddress;
      }
      if (other.MqttAddress.Length != 0) {
        MqttAddress = other.MqttAddress;
      }
      if (other.AmqpAddress.Length != 0) {
        AmqpAddress = other.AmqpAddress;
      }
      metadata_.Add(other.metadata_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            ServiceName = input.ReadString();
            break;
          }
          case 26: {
            ServiceVersion = input.ReadString();
            break;
          }
          case 34: {
            Description = input.ReadString();
            break;
          }
          case 42: {
            Url = input.ReadString();
            break;
          }
          case 48: {
            Public = input.ReadBool();
            break;
          }
          case 90: {
            NetAddress = input.ReadString();
            break;
          }
          case 98: {
            PublicKey = input.ReadString();
            break;
          }
          case 106: {
            Certificate = input.ReadString();
            break;
          }
          case 114: {
            ApiAddress = input.ReadString();
            break;
          }
          case 122: {
            MqttAddress = input.ReadString();
            break;
          }
          case 130: {
            AmqpAddress = input.ReadString();
            break;
          }
          case 178: {
            metadata_.AddEntriesFrom(input, _repeated_metadata_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetServiceRequest : pb::IMessage<GetServiceRequest> {
    private static readonly pb::MessageParser<GetServiceRequest> _parser = new pb::MessageParser<GetServiceRequest>(() => new GetServiceRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetServiceRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TheThingsNetwork.API.Discovery.DiscoveryReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetServiceRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetServiceRequest(GetServiceRequest other) : this() {
      serviceName_ = other.serviceName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetServiceRequest Clone() {
      return new GetServiceRequest(this);
    }

    /// <summary>Field number for the "service_name" field.</summary>
    public const int ServiceNameFieldNumber = 1;
    private string serviceName_ = "";
    /// <summary>
    /// The name of the service (router/broker/handler)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServiceName {
      get { return serviceName_; }
      set {
        serviceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetServiceRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetServiceRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ServiceName != other.ServiceName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ServiceName.Length != 0) hash ^= ServiceName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ServiceName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ServiceName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ServiceName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServiceName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetServiceRequest other) {
      if (other == null) {
        return;
      }
      if (other.ServiceName.Length != 0) {
        ServiceName = other.ServiceName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ServiceName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// The identifier of the service that should be returned
  /// </summary>
  public sealed partial class GetRequest : pb::IMessage<GetRequest> {
    private static readonly pb::MessageParser<GetRequest> _parser = new pb::MessageParser<GetRequest>(() => new GetRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TheThingsNetwork.API.Discovery.DiscoveryReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRequest(GetRequest other) : this() {
      id_ = other.id_;
      serviceName_ = other.serviceName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRequest Clone() {
      return new GetRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    /// The ID of the service
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "service_name" field.</summary>
    public const int ServiceNameFieldNumber = 2;
    private string serviceName_ = "";
    /// <summary>
    /// The name of the service (router/broker/handler)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServiceName {
      get { return serviceName_; }
      set {
        serviceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (ServiceName != other.ServiceName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (ServiceName.Length != 0) hash ^= ServiceName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (ServiceName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ServiceName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (ServiceName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServiceName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetRequest other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.ServiceName.Length != 0) {
        ServiceName = other.ServiceName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            ServiceName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// The metadata to add or remove from an announement
  /// </summary>
  public sealed partial class MetadataRequest : pb::IMessage<MetadataRequest> {
    private static readonly pb::MessageParser<MetadataRequest> _parser = new pb::MessageParser<MetadataRequest>(() => new MetadataRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MetadataRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TheThingsNetwork.API.Discovery.DiscoveryReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MetadataRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MetadataRequest(MetadataRequest other) : this() {
      id_ = other.id_;
      serviceName_ = other.serviceName_;
      metadata_ = other.metadata_ != null ? other.metadata_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MetadataRequest Clone() {
      return new MetadataRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    /// The ID of the service that should be modified
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "service_name" field.</summary>
    public const int ServiceNameFieldNumber = 2;
    private string serviceName_ = "";
    /// <summary>
    /// The name of the service (router/broker/handler) that should be modified
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServiceName {
      get { return serviceName_; }
      set {
        serviceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 12;
    private global::TheThingsNetwork.API.Discovery.Metadata metadata_;
    /// <summary>
    /// Metadata to add or remove
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TheThingsNetwork.API.Discovery.Metadata Metadata {
      get { return metadata_; }
      set {
        metadata_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MetadataRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MetadataRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (ServiceName != other.ServiceName) return false;
      if (!object.Equals(Metadata, other.Metadata)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (ServiceName.Length != 0) hash ^= ServiceName.GetHashCode();
      if (metadata_ != null) hash ^= Metadata.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (ServiceName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ServiceName);
      }
      if (metadata_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(Metadata);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (ServiceName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServiceName);
      }
      if (metadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metadata);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MetadataRequest other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.ServiceName.Length != 0) {
        ServiceName = other.ServiceName;
      }
      if (other.metadata_ != null) {
        if (metadata_ == null) {
          Metadata = new global::TheThingsNetwork.API.Discovery.Metadata();
        }
        Metadata.MergeFrom(other.Metadata);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            ServiceName = input.ReadString();
            break;
          }
          case 98: {
            if (metadata_ == null) {
              Metadata = new global::TheThingsNetwork.API.Discovery.Metadata();
            }
            input.ReadMessage(Metadata);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// A list of announcements
  /// </summary>
  public sealed partial class AnnouncementsResponse : pb::IMessage<AnnouncementsResponse> {
    private static readonly pb::MessageParser<AnnouncementsResponse> _parser = new pb::MessageParser<AnnouncementsResponse>(() => new AnnouncementsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AnnouncementsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TheThingsNetwork.API.Discovery.DiscoveryReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnnouncementsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnnouncementsResponse(AnnouncementsResponse other) : this() {
      services_ = other.services_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnnouncementsResponse Clone() {
      return new AnnouncementsResponse(this);
    }

    /// <summary>Field number for the "services" field.</summary>
    public const int ServicesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::TheThingsNetwork.API.Discovery.Announcement> _repeated_services_codec
        = pb::FieldCodec.ForMessage(10, global::TheThingsNetwork.API.Discovery.Announcement.Parser);
    private readonly pbc::RepeatedField<global::TheThingsNetwork.API.Discovery.Announcement> services_ = new pbc::RepeatedField<global::TheThingsNetwork.API.Discovery.Announcement>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TheThingsNetwork.API.Discovery.Announcement> Services {
      get { return services_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AnnouncementsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AnnouncementsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!services_.Equals(other.services_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= services_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      services_.WriteTo(output, _repeated_services_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += services_.CalculateSize(_repeated_services_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AnnouncementsResponse other) {
      if (other == null) {
        return;
      }
      services_.Add(other.services_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            services_.AddEntriesFrom(input, _repeated_services_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetByAppIDRequest : pb::IMessage<GetByAppIDRequest> {
    private static readonly pb::MessageParser<GetByAppIDRequest> _parser = new pb::MessageParser<GetByAppIDRequest>(() => new GetByAppIDRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetByAppIDRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TheThingsNetwork.API.Discovery.DiscoveryReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetByAppIDRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetByAppIDRequest(GetByAppIDRequest other) : this() {
      appId_ = other.appId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetByAppIDRequest Clone() {
      return new GetByAppIDRequest(this);
    }

    /// <summary>Field number for the "app_id" field.</summary>
    public const int AppIdFieldNumber = 30;
    private string appId_ = "";
    /// <summary>
    /// compatible with Metadata message
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AppId {
      get { return appId_; }
      set {
        appId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetByAppIDRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetByAppIDRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AppId != other.AppId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AppId.Length != 0) hash ^= AppId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AppId.Length != 0) {
        output.WriteRawTag(242, 1);
        output.WriteString(AppId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AppId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(AppId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetByAppIDRequest other) {
      if (other == null) {
        return;
      }
      if (other.AppId.Length != 0) {
        AppId = other.AppId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 242: {
            AppId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetByGatewayIDRequest : pb::IMessage<GetByGatewayIDRequest> {
    private static readonly pb::MessageParser<GetByGatewayIDRequest> _parser = new pb::MessageParser<GetByGatewayIDRequest>(() => new GetByGatewayIDRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetByGatewayIDRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TheThingsNetwork.API.Discovery.DiscoveryReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetByGatewayIDRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetByGatewayIDRequest(GetByGatewayIDRequest other) : this() {
      gatewayId_ = other.gatewayId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetByGatewayIDRequest Clone() {
      return new GetByGatewayIDRequest(this);
    }

    /// <summary>Field number for the "gateway_id" field.</summary>
    public const int GatewayIdFieldNumber = 30;
    private string gatewayId_ = "";
    /// <summary>
    /// compatible with Metadata message
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GatewayId {
      get { return gatewayId_; }
      set {
        gatewayId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetByGatewayIDRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetByGatewayIDRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GatewayId != other.GatewayId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GatewayId.Length != 0) hash ^= GatewayId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (GatewayId.Length != 0) {
        output.WriteRawTag(242, 1);
        output.WriteString(GatewayId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GatewayId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(GatewayId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetByGatewayIDRequest other) {
      if (other == null) {
        return;
      }
      if (other.GatewayId.Length != 0) {
        GatewayId = other.GatewayId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 242: {
            GatewayId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetByAppEUIRequest : pb::IMessage<GetByAppEUIRequest> {
    private static readonly pb::MessageParser<GetByAppEUIRequest> _parser = new pb::MessageParser<GetByAppEUIRequest>(() => new GetByAppEUIRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetByAppEUIRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TheThingsNetwork.API.Discovery.DiscoveryReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetByAppEUIRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetByAppEUIRequest(GetByAppEUIRequest other) : this() {
      appEui_ = other.appEui_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetByAppEUIRequest Clone() {
      return new GetByAppEUIRequest(this);
    }

    /// <summary>Field number for the "app_eui" field.</summary>
    public const int AppEuiFieldNumber = 31;
    private pb::ByteString appEui_ = pb::ByteString.Empty;
    /// <summary>
    /// compatible with Metadata message
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString AppEui {
      get { return appEui_; }
      set {
        appEui_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetByAppEUIRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetByAppEUIRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AppEui != other.AppEui) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AppEui.Length != 0) hash ^= AppEui.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AppEui.Length != 0) {
        output.WriteRawTag(250, 1);
        output.WriteBytes(AppEui);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AppEui.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeBytesSize(AppEui);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetByAppEUIRequest other) {
      if (other == null) {
        return;
      }
      if (other.AppEui.Length != 0) {
        AppEui = other.AppEui;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 250: {
            AppEui = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
